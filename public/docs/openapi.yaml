openapi: 3.0.3
info:
  title: 'EAD ABTPÃ©'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://new-abtpe.test'
paths:
  /api/v1/login:
    post:
      summary: ''
      operationId: postApiV1Login
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 254 characters.'
                  example: wziemann@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Must contain at least one uppercase and one lowercase letter; must contain at least one symbol; must contain at least one number.'
                  example: 'H3u3h#H%#ywQEG.'
                  nullable: false
                remember:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/v1/register:
    post:
      summary: ''
      operationId: postApiV1Register
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: dolores
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 254 characters.'
                  example: cohara@example.com
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: ad
                  nullable: false
                password_confirmation:
                  type: string
                  description: ''
                  example: neque
                  nullable: false
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/v1/me:
    get:
      summary: 'Get the authenticated user resource.'
      operationId: getTheAuthenticatedUserResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/v1/logout:
    delete:
      summary: ''
      operationId: deleteApiV1Logout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v1/check-token:
    post:
      summary: ''
      operationId: postApiV1CheckToken
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/v1/mzrt/users/phone-numbers/{user_id}':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                country_code:
                  type: integer
                  description: ''
                  example: 10
                  nullable: false
                area_code:
                  type: integer
                  description: ''
                  example: 2
                  nullable: false
                phone_number:
                  type: string
                  description: ''
                  example: earum
                  nullable: false
                type:
                  type: string
                  description: ''
                  example: phone
                  nullable: false
                  enum:
                    - mobile
                    - phone
              required:
                - country_code
                - area_code
                - phone_number
                - type
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/mzrt/users/phone-numbers/{phoneNumber_id}':
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                country_code:
                  type: integer
                  description: ''
                  example: 4
                  nullable: false
                area_code:
                  type: integer
                  description: ''
                  example: 8
                  nullable: false
                phone_number:
                  type: string
                  description: ''
                  example: cum
                  nullable: false
                type:
                  type: string
                  description: ''
                  example: mobile
                  nullable: false
                  enum:
                    - mobile
                    - phone
              required:
                - country_code
                - area_code
                - phone_number
                - type
    delete:
      summary: ''
      operationId: deleteApiV1MzrtUsersPhoneNumbersPhoneNumber_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: phoneNumber_id
        description: 'The ID of the phoneNumber.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/mzrt/users:
    get:
      summary: 'List all users'
      operationId: listAllUsers
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Mozart
    post:
      summary: 'Store a new user'
      operationId: storeANewUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: illo
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: towne.russel@example.com
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: sit
                  nullable: false
                role:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                group_id:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                document:
                  type: string
                  description: ''
                  example: qui
                  nullable: false
                identity_registry:
                  type: string
                  description: ''
                  example: et
                  nullable: false
                avatar:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                birth_date:
                  type: string
                  description: 'Must be a valid date in the format <code>d/m/Y</code>.'
                  example: 19/10/2024
                  nullable: false
                gender:
                  type: string
                  description: ''
                  example: male
                  nullable: false
                  enum:
                    - male
                    - female
                    - both
                type:
                  type: string
                  description: ''
                  example: admin
                  nullable: false
                  enum:
                    - development
                    - superuser
                    - admin
                    - student
                    - instructor
                where_know_us:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                source:
                  type: string
                  description: ''
                  example: amet
                  nullable: false
                nickname:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                active:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
              required:
                - name
                - email
                - password
                - document
                - identity_registry
                - birth_date
                - gender
                - type
                - source
                - active
  '/api/v1/mzrt/users/{id}':
    get:
      summary: 'Returns a specific user'
      operationId: returnsASpecificUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Mozart
    put:
      summary: 'Updates a specific user'
      operationId: updatesASpecificUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: nisi
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: lora.stamm@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Must contain at least one uppercase and one lowercase letter; must contain at least one symbol; must contain at least one number.'
                  example: 'H3u3h#H%#ywQEG.'
                  nullable: true
                role:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                group_id:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                document:
                  type: string
                  description: ''
                  example: rerum
                  nullable: false
                identity_registry:
                  type: string
                  description: ''
                  example: nam
                  nullable: false
                avatar:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                type:
                  type: string
                  description: ''
                  example: development
                  nullable: false
                  enum:
                    - development
                    - superuser
                    - admin
                    - student
                    - instructor
                birth_date:
                  type: string
                  description: 'Must be a valid date in the format <code>d/m/Y</code>.'
                  example: 19/10/2024
                  nullable: false
                gender:
                  type: string
                  description: ''
                  example: female
                  nullable: false
                  enum:
                    - male
                    - female
                    - both
                where_know_us:
                  type: string
                  description: ''
                  example: assumenda
                  nullable: true
                source:
                  type: string
                  description: ''
                  example: tempore
                  nullable: false
                nickname:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                active:
                  type: string
                  description: ''
                  example: non
                  nullable: false
              required:
                - name
                - email
                - document
                - identity_registry
                - type
                - birth_date
                - gender
                - source
                - active
    delete:
      summary: 'Delete a user'
      operationId: deleteAUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/mzrt/user-groups:
    get:
      summary: "Displays a list of all groups of users. It accepts one parameter \"all\". Case has this parameter,\nit returns all groups of users with no paginate."
      operationId: displaysAListOfAllGroupsOfUsersItAcceptsOneParameterallCaseHasThisParameteritReturnsAllGroupsOfUsersWithNoPaginate
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Mozart
    post:
      summary: 'Store a new user group'
      operationId: storeANewUserGroup
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "Group's name."
                  example: Vip
                  nullable: false
                discount:
                  type: string
                  description: 'User groups can have discounts. Type: decimal.'
                  example: 35916831.77
                  nullable: true
                commission:
                  type: string
                  description: 'User groups can have commissions. Type: decimal.'
                  example: 82.57
                  nullable: true
              required:
                - name
  '/api/v1/mzrt/user-groups/{id}':
    get:
      summary: ''
      operationId: getApiV1MzrtUserGroupsId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Mozart
    put:
      summary: 'Update a specific user group'
      operationId: updateASpecificUserGroup
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "Group's name."
                  example: Vip
                  nullable: false
                discount:
                  type: string
                  description: 'User groups can have discounts. Type: decimal.'
                  example: 0.71
                  nullable: true
                commission:
                  type: string
                  description: 'User groups can have commissions. Type: decimal.'
                  example: 1806818.19
                  nullable: true
              required:
                - name
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user group.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/mzrt/courses:
    get:
      summary: 'Display a listing of the courses.'
      operationId: displayAListingOfTheCourses
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Mozart
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order:
                  type: integer
                  description: 'The order of the course.'
                  example: 1
                  nullable: true
                name:
                  type: string
                  description: 'The name of the course.'
                  example: 'Mastering Laravel 11'
                  nullable: false
                slug:
                  type: string
                  description: 'The slug of the course.'
                  example: mastering-laravel-11
                  nullable: false
                level:
                  type: string
                  description: 'The level of the course.'
                  example: intermediate
                  nullable: false
                  enum:
                    - beginner
                    - intermediate
                    - advanced
                description:
                  type: string
                  description: 'The description of the course.'
                  example: 'A comprehensive course on mastering Laravel 11.'
                  nullable: true
                pre_requisites:
                  type: object
                  description: 'The pre-requisites for the course.'
                  example: null
                  nullable: true
                  properties: {  }
                target:
                  type: string
                  description: 'The target audience for the course.'
                  example: 'Developers looking to enhance their Laravel skills.'
                  nullable: true
                image_featured:
                  type: string
                  description: 'The featured image URL for the course.'
                  example: null
                  nullable: true
                image_cover:
                  type: string
                  description: 'The cover image URL for the course.'
                  example: null
                  nullable: true
                is_fifo:
                  type: boolean
                  description: 'Whether the course is FIFO.'
                  example: false
                  nullable: false
                active:
                  type: boolean
                  description: 'Whether the course is active.'
                  example: false
                  nullable: false
                meta_description:
                  type: string
                  description: 'The meta description for the course.'
                  example: 'Learn advanced Laravel 11 techniques.'
                  nullable: true
                meta_keywords:
                  type: string
                  description: 'The meta keywords for the course.'
                  example: 'Laravel, PHP, web development'
                  nullable: true
                price:
                  type: number
                  description: 'The price of the course.'
                  example: 199.99
                  nullable: false
                access_months:
                  type: integer
                  description: 'The number of months the course is accessible.'
                  example: 12
                  nullable: true
                started_at:
                  type: string
                  description: 'The start date of the course. Must be a valid date.'
                  example: '2024-10-19T11:22:20'
                  nullable: true
                ended_at:
                  type: string
                  description: 'The end date of the course. Must be a valid date.'
                  example: '2025-10-19T11:22:20'
                  nullable: true
                amount:
                  type: number
                  description: 'The amount of the course.'
                  example: 100.0
                  nullable: false
                discount:
                  type: number
                  description: 'The discount on the course.'
                  example: 20.0
                  nullable: false
                level_description:
                  type: string
                  description: 'The level description of the course.'
                  example: null
                  nullable: true
                course_modules:
                  type: array
                  description: 'The modules of the course.'
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      language_id:
                        type: string
                        description: 'The language ID of the module.'
                        example: 1
                        nullable: false
                      name:
                        type: string
                        description: 'The name of the module.'
                        example: 'Advanced Routing Techniques'
                        nullable: false
                      slug:
                        type: string
                        description: 'The slug of the module.'
                        example: advanced-routing-techniques
                        nullable: false
                      lessons:
                        type: array
                        description: 'The lessons of the module.'
                        example:
                          - []
                        items:
                          type: object
                          properties:
                            order:
                              type: integer
                              description: 'The order of the lesson.'
                              example: 1
                              nullable: false
                            name:
                              type: string
                              description: 'The name of the lesson.'
                              example: 'Route Model Binding'
                              nullable: false
                            slug:
                              type: string
                              description: 'The slug of the lesson.'
                              example: route-model-binding
                              nullable: false
                            video_type:
                              type: string
                              description: 'The video type of the lesson.'
                              example: mp4
                              nullable: false
                            video_path:
                              type: string
                              description: 'The video path of the lesson.'
                              example: /videos/route-model-binding.mp4
                              nullable: false
                            video_duration:
                              type: string
                              description: 'The video duration of the lesson.'
                              example: '10:00'
                              nullable: false
                            video_downloadable:
                              type: boolean
                              description: 'Whether the video is downloadable.'
                              example: false
                              nullable: false
                            summary:
                              type: string
                              description: 'The summary of the lesson.'
                              example: 'Learn how to use route model binding in Laravel.'
                              nullable: false
                            description:
                              type: string
                              description: 'The description of the lesson.'
                              example: 'This lesson covers the basics of route model binding in Laravel.'
                              nullable: false
                            image_featured:
                              type: string
                              description: 'The featured image URL of the lesson.'
                              example: /images/route-model-binding.jpg
                              nullable: false
                            meta_description:
                              type: string
                              description: 'The meta description of the lesson.'
                              example: 'Learn route model binding in Laravel.'
                              nullable: false
                            meta_keywords:
                              type: string
                              description: 'The meta keywords of the lesson.'
                              example: 'Laravel, routing, model binding'
                              nullable: false
                            is_free:
                              type: boolean
                              description: 'Whether the lesson is free.'
                              example: false
                              nullable: false
                            is_commentable:
                              type: boolean
                              description: 'Whether the lesson is commentable.'
                              example: false
                              nullable: false
                            active:
                              type: boolean
                              description: 'Whether the lesson is active.'
                              example: false
                              nullable: false
                            started_at:
                              type: string
                              description: 'The start date of the lesson. Must be a valid date.'
                              example: '2024-10-19T11:22:20'
                              nullable: false
                            ended_at:
                              type: string
                              description: 'The end date of the lesson. Must be a valid date.'
                              example: '2025-10-19T11:22:20'
                              nullable: false
                          required:
                            - order
                            - name
                            - slug
                            - video_type
                            - video_path
                            - video_duration
                            - video_downloadable
                            - summary
                            - description
                            - image_featured
                            - meta_description
                            - meta_keywords
                            - is_free
                            - is_commentable
                            - active
                            - started_at
                            - ended_at
                    required:
                      - language_id
                      - name
                      - slug
                      - lessons
              required:
                - name
                - slug
                - level
                - is_fifo
                - active
                - price
                - amount
                - discount
                - course_modules
  '/api/v1/mzrt/courses/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Mozart
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order:
                  type: integer
                  description: 'The order of the course.'
                  example: 1
                  nullable: true
                name:
                  type: string
                  description: 'The name of the course.'
                  example: 'Mastering Laravel 11'
                  nullable: false
                slug:
                  type: string
                  description: 'The slug of the course.'
                  example: mastering-laravel-11
                  nullable: false
                level:
                  type: string
                  description: 'The level of the course.'
                  example: intermediate
                  nullable: false
                  enum:
                    - beginner
                    - intermediate
                    - advanced
                description:
                  type: string
                  description: 'The description of the course.'
                  example: 'A comprehensive course on mastering Laravel 11.'
                  nullable: true
                pre_requisites:
                  type: object
                  description: 'The pre-requisites for the course.'
                  example: null
                  nullable: true
                  properties: {  }
                target:
                  type: string
                  description: 'The target audience for the course.'
                  example: 'Developers looking to enhance their Laravel skills.'
                  nullable: true
                image_featured:
                  type: string
                  description: 'The featured image URL for the course.'
                  example: null
                  nullable: true
                image_cover:
                  type: string
                  description: 'The cover image URL for the course.'
                  example: null
                  nullable: true
                is_fifo:
                  type: boolean
                  description: 'Whether the course is FIFO.'
                  example: false
                  nullable: false
                active:
                  type: boolean
                  description: 'Whether the course is active.'
                  example: false
                  nullable: false
                meta_description:
                  type: string
                  description: 'The meta description for the course.'
                  example: 'Learn advanced Laravel 11 techniques.'
                  nullable: true
                meta_keywords:
                  type: string
                  description: 'The meta keywords for the course.'
                  example: 'Laravel, PHP, web development'
                  nullable: true
                price:
                  type: number
                  description: 'The price of the course.'
                  example: 199.99
                  nullable: false
                access_months:
                  type: integer
                  description: 'The number of months the course is accessible.'
                  example: 12
                  nullable: true
                started_at:
                  type: string
                  description: 'The start date of the course. Must be a valid date.'
                  example: '2024-10-19T11:22:20'
                  nullable: true
                ended_at:
                  type: string
                  description: 'The end date of the course. Must be a valid date.'
                  example: '2025-10-19T11:22:20'
                  nullable: true
                amount:
                  type: number
                  description: 'The amount of the course.'
                  example: 100.0
                  nullable: false
                discount:
                  type: number
                  description: 'The discount on the course.'
                  example: 20.0
                  nullable: false
                level_description:
                  type: string
                  description: 'The level description of the course.'
                  example: null
                  nullable: true
                course_modules:
                  type: array
                  description: 'The modules of the course.'
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      language_id:
                        type: string
                        description: 'The language ID of the module.'
                        example: 1
                        nullable: false
                      name:
                        type: string
                        description: 'The name of the module.'
                        example: 'Advanced Routing Techniques'
                        nullable: false
                      slug:
                        type: string
                        description: 'The slug of the module.'
                        example: advanced-routing-techniques
                        nullable: false
                      lessons:
                        type: array
                        description: 'The lessons of the module.'
                        example:
                          - []
                        items:
                          type: object
                          properties:
                            order:
                              type: integer
                              description: 'The order of the lesson.'
                              example: 1
                              nullable: false
                            name:
                              type: string
                              description: 'The name of the lesson.'
                              example: 'Route Model Binding'
                              nullable: false
                            slug:
                              type: string
                              description: 'The slug of the lesson.'
                              example: route-model-binding
                              nullable: false
                            video_type:
                              type: string
                              description: 'The video type of the lesson.'
                              example: mp4
                              nullable: false
                            video_path:
                              type: string
                              description: 'The video path of the lesson.'
                              example: /videos/route-model-binding.mp4
                              nullable: false
                            video_duration:
                              type: string
                              description: 'The video duration of the lesson.'
                              example: '10:00'
                              nullable: false
                            video_downloadable:
                              type: boolean
                              description: 'Whether the video is downloadable.'
                              example: false
                              nullable: false
                            summary:
                              type: string
                              description: 'The summary of the lesson.'
                              example: 'Learn how to use route model binding in Laravel.'
                              nullable: false
                            description:
                              type: string
                              description: 'The description of the lesson.'
                              example: 'This lesson covers the basics of route model binding in Laravel.'
                              nullable: false
                            image_featured:
                              type: string
                              description: 'The featured image URL of the lesson.'
                              example: /images/route-model-binding.jpg
                              nullable: false
                            meta_description:
                              type: string
                              description: 'The meta description of the lesson.'
                              example: 'Learn route model binding in Laravel.'
                              nullable: false
                            meta_keywords:
                              type: string
                              description: 'The meta keywords of the lesson.'
                              example: 'Laravel, routing, model binding'
                              nullable: false
                            is_free:
                              type: boolean
                              description: 'Whether the lesson is free.'
                              example: false
                              nullable: false
                            is_commentable:
                              type: boolean
                              description: 'Whether the lesson is commentable.'
                              example: false
                              nullable: false
                            active:
                              type: boolean
                              description: 'Whether the lesson is active.'
                              example: false
                              nullable: false
                            started_at:
                              type: string
                              description: 'The start date of the lesson. Must be a valid date.'
                              example: '2024-10-19T11:22:20'
                              nullable: false
                            ended_at:
                              type: string
                              description: 'The end date of the lesson. Must be a valid date.'
                              example: '2025-10-19T11:22:20'
                              nullable: false
                          required:
                            - order
                            - name
                            - slug
                            - video_type
                            - video_path
                            - video_duration
                            - video_downloadable
                            - summary
                            - description
                            - image_featured
                            - meta_description
                            - meta_keywords
                            - is_free
                            - is_commentable
                            - active
                            - started_at
                            - ended_at
                    required:
                      - language_id
                      - name
                      - slug
                      - lessons
              required:
                - name
                - slug
                - level
                - is_fifo
                - active
                - price
                - amount
                - discount
                - course_modules
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the course.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/mzrt/settings:
    get:
      summary: 'Retrieves a collection of settings.'
      operationId: retrievesACollectionOfSettings
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Mozart
    post:
      summary: ''
      operationId: postApiV1MzrtSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
  '/api/v1/mzrt/settings/{id}':
    get:
      summary: 'Fetches and returns the resource representation of a specific Setting.'
      operationId: fetchesAndReturnsTheResourceRepresentationOfASpecificSetting
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Mozart
    put:
      summary: ''
      operationId: putApiV1MzrtSettingsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
    delete:
      summary: 'Deletes a specific Setting.'
      operationId: deletesASpecificSetting
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the setting.'
        example: 13
        required: true
        schema:
          type: integer
  /api/v1/mzrt/roles:
    get:
      summary: ''
      operationId: getApiV1MzrtRoles
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Mozart
    post:
      summary: 'Method to store a new role in the storage'
      operationId: methodToStoreANewRoleInTheStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: dolores
                  nullable: false
                guard_name:
                  type: string
                  description: ''
                  example: hic
                  nullable: false
                group_name:
                  type: string
                  description: ''
                  example: recusandae
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                permissions:
                  type: array
                  description: 'The <code>id</code> of an existing record in the permissions table.'
                  example: null
                  items:
                    type: string
              required:
                - name
                - guard_name
                - group_name
  '/api/v1/mzrt/roles/{id}':
    get:
      summary: ''
      operationId: getApiV1MzrtRolesId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Mozart
    put:
      summary: ''
      operationId: putApiV1MzrtRolesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: dolores
                  nullable: false
                guard_name:
                  type: string
                  description: ''
                  example: soluta
                  nullable: false
                group_name:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                permissions:
                  type: array
                  description: 'The <code>id</code> of an existing record in the permissions table.'
                  example: null
                  items:
                    type: string
              required:
                - name
                - guard_name
                - group_name
    delete:
      summary: 'Remove a role from the database'
      operationId: removeARoleFromTheDatabase
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the role.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/mzrt/categories:
    get:
      summary: 'Retrieves a collection of categories.'
      operationId: retrievesACollectionOfCategories
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Mozart
    post:
      summary: ''
      operationId: postApiV1MzrtCategories
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: aut
                  nullable: false
                slug:
                  type: string
                  description: ''
                  example: earum
                  nullable: false
                order:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                is_showcase:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                active:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                image:
                  type: string
                  description: ''
                  example: null
                  nullable: true
              required:
                - name
                - slug
  '/api/v1/mzrt/categories/{id}':
    get:
      summary: 'Fetches and returns the resource representation of a specific Category.'
      operationId: fetchesAndReturnsTheResourceRepresentationOfASpecificCategory
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Mozart
    put:
      summary: ''
      operationId: putApiV1MzrtCategoriesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: enim
                  nullable: false
                slug:
                  type: string
                  description: ''
                  example: at
                  nullable: false
                order:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                is_showcase:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                active:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                image:
                  type: string
                  description: ''
                  example: null
                  nullable: true
              required:
                - name
                - slug
    delete:
      summary: 'Deletes a specific Category.'
      operationId: deletesASpecificCategory
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the category.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/mzrt/users/enable/{user_id}':
    patch:
      summary: 'Enable a user'
      operationId: enableAUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/mzrt/users/disable/{user_id}':
    patch:
      summary: 'Disable a user'
      operationId: disableAUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/mzrt/users/addresses/{user_id}':
    get:
      summary: 'Get all addresses from a given user'
      operationId: getAllAddressesFromAGivenUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Mozart
    post:
      summary: 'Store a new address for the specified user'
      operationId: storeANewAddressForTheSpecifiedUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                zip_code:
                  type: integer
                  description: ''
                  example: 18
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: ex
                  nullable: false
                number:
                  type: string
                  description: ''
                  example: rerum
                  nullable: false
                complement:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                district:
                  type: string
                  description: ''
                  example: quis
                  nullable: false
                city:
                  type: string
                  description: ''
                  example: sed
                  nullable: false
                state:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: false
              required:
                - zip_code
                - address
                - number
                - district
                - city
                - state
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/mzrt/users/addresses/postal-code/{postalCode}':
    get:
      summary: 'Get address by postal code.'
      operationId: getAddressByPostalCode
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Mozart
    parameters:
      -
        in: path
        name: postalCode
        description: ''
        example: aut
        required: true
        schema:
          type: string
  '/api/v1/mzrt/users/addresses/{id}':
    put:
      summary: 'Updates an existing address'
      operationId: updatesAnExistingAddress
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                zip_code:
                  type: integer
                  description: ''
                  example: 8
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: error
                  nullable: false
                number:
                  type: string
                  description: ''
                  example: enim
                  nullable: false
                complement:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                district:
                  type: string
                  description: ''
                  example: et
                  nullable: false
                city:
                  type: string
                  description: ''
                  example: nostrum
                  nullable: false
                state:
                  type: string
                  description: ''
                  example: possimus
                  nullable: false
              required:
                - zip_code
                - address
                - number
                - district
                - city
                - state
    delete:
      summary: 'Deletes an address'
      operationId: deletesAnAddress
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the address.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/mzrt/users/instructor/{user_id}':
    post:
      summary: 'Stores the instructors data from a user'
      operationId: storesTheInstructorsDataFromAUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: perspiciatis
                  nullable: false
                commission:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                bank_iban:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                bank_name:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                identify_image:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                financial_approved:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                available_meetings:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                sex_meetings:
                  type: string
                  description: ''
                  example: male
                  nullable: true
                  enum:
                    - male
                    - female
                    - both
                meeting_type:
                  type: string
                  description: ''
                  example: both
                  nullable: true
                  enum:
                    - male
                    - female
                    - both
              required:
                - user_id
    put:
      summary: 'Updates the instructor information from a user'
      operationId: updatesTheInstructorInformationFromAUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                commission:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                bank_iban:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                bank_name:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                identify_image:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                financial_approved:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                available_meetings:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                sex_meetings:
                  type: string
                  description: ''
                  example: both
                  nullable: true
                  enum:
                    - male
                    - female
                    - both
                meeting_type:
                  type: string
                  description: ''
                  example: both
                  nullable: true
                  enum:
                    - male
                    - female
                    - both
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/mzrt/users/student/{user_id}':
    post:
      summary: 'Store a newly created student for an existent user.'
      operationId: storeANewlyCreatedStudentForAnExistentUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                points:
                  type: integer
                  description: ''
                  example: 11
                  nullable: false
              required:
                - points
    put:
      summary: 'Update the specified student from an existent user.'
      operationId: updateTheSpecifiedStudentFromAnExistentUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                points:
                  type: integer
                  description: ''
                  example: 15
                  nullable: false
              required:
                - points
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/mzrt/users/student/increase-points/{user_id}':
    patch:
      summary: "Increase the student's point"
      operationId: increaseTheStudentsPoint
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                points:
                  type: number
                  description: 'Must be at least 1.'
                  example: 90
                  nullable: false
              required:
                - points
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/mzrt/users/student/decrease-points/{user_id}':
    patch:
      summary: "Decrease the student's point"
      operationId: decreaseTheStudentsPoint
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                points:
                  type: number
                  description: 'Must be at least 1.'
                  example: 86
                  nullable: false
              required:
                - points
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/mzrt/roles/groups:
    get:
      summary: ''
      operationId: getApiV1MzrtRolesGroups
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Mozart
  /api/v1/mzrt/roles/create-simple:
    post:
      summary: 'Method to store a new role in the storage but not from bulk'
      operationId: methodToStoreANewRoleInTheStorageButNotFromBulk
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: quas
                  nullable: false
                guard_name:
                  type: string
                  description: ''
                  example: eos
                  nullable: false
                group_name:
                  type: string
                  description: ''
                  example: incidunt
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                permissions:
                  type: array
                  description: 'The <code>id</code> of an existing record in the permissions table.'
                  example: null
                  items:
                    type: string
              required:
                - name
                - guard_name
                - group_name
  /api/v1/mzrt/roles/permissions:
    get:
      summary: ''
      operationId: getApiV1MzrtRolesPermissions
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Mozart
  /api/v1/mzrt/groups:
    get:
      summary: 'Retrieves a collection of group users based on the provided request.'
      operationId: retrievesACollectionOfGroupUsersBasedOnTheProvidedRequest
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Mozart
    post:
      summary: 'Store a new resource'
      operationId: storeANewResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "Group's name."
                  example: Vip
                  nullable: false
                discount:
                  type: string
                  description: 'User groups can have discounts. Type: decimal.'
                  example: 57810.64
                  nullable: true
                commission:
                  type: string
                  description: 'User groups can have commissions. Type: decimal.'
                  example: 30552101.93
                  nullable: true
              required:
                - name
  /api/v1/mzrt/groups/all:
    get:
      summary: 'Retrieve all group users.'
      operationId: retrieveAllGroupUsers
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Mozart
  '/api/v1/mzrt/groups/{id}':
    get:
      summary: 'Get a specific resource'
      operationId: getASpecificResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Mozart
    put:
      summary: 'Update a group'
      operationId: updateAGroup
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "Group's name."
                  example: Vip
                  nullable: false
                discount:
                  type: string
                  description: 'User groups can have discounts. Type: decimal.'
                  example: 105.36
                  nullable: true
                commission:
                  type: string
                  description: 'User groups can have commissions. Type: decimal.'
                  example: 263064.03
                  nullable: true
              required:
                - name
    delete:
      summary: 'Remove a group from the database'
      operationId: removeAGroupFromTheDatabase
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Mozart
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the group.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/mzrt/categories/all:
    get:
      summary: 'Retrieves a collection of categories.'
      operationId: retrievesACollectionOfCategories
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Mozart
tags:
  -
    name: Endpoints
    description: ''
  -
    name: Mozart
    description: "\nClass GroupController"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
