name: Mozart
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/mzrt/users
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'List of generic users'
      title: 'List all users'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=FvG39hnoiVmwSyKnwumwBo2BV58VD4mBBkQZA9mk; expires=Sat, 30 Sep 2023 15:30:01 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 64kgb6Pfc8haDd1VaEv5Z3e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/mzrt/users
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'List of generic users'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: occaecati
        type: string
        enumValues: []
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: pmoen@example.net
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: natus
        type: string
        enumValues: []
        custom: []
      role:
        name: role
        description: ''
        required: true
        example: superuser
        type: string
        enumValues:
          - development
          - superuser
          - admin
          - student
          - instructor
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        custom: []
      timezone_id:
        name: timezone_id
        description: ''
        required: true
        example: consectetur
        type: string
        enumValues: []
        custom: []
      group_id:
        name: group_id
        description: ''
        required: true
        example: voluptas
        type: string
        enumValues: []
        custom: []
      document:
        name: document
        description: ''
        required: true
        example: ut
        type: string
        enumValues: []
        custom: []
      identity_registry:
        name: identity_registry
        description: ''
        required: true
        example: dolorum
        type: string
        enumValues: []
        custom: []
      avatar:
        name: avatar
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      birth_date:
        name: birth_date
        description: 'Must be a valid date in the format <code>d/m/Y</code>.'
        required: true
        example: 30/09/2023
        type: string
        enumValues: []
        custom: []
      gender:
        name: gender
        description: ''
        required: true
        example: both
        type: string
        enumValues:
          - male
          - female
          - both
        custom: []
      where_know_us:
        name: where_know_us
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      source:
        name: source
        description: ''
        required: true
        example: rerum
        type: string
        enumValues: []
        custom: []
      nickname:
        name: nickname
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      active:
        name: active
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: occaecati
      email: pmoen@example.net
      password: natus
      role: superuser
      address: []
      timezone_id: consectetur
      group_id: voluptas
      document: ut
      identity_registry: dolorum
      birth_date: 30/09/2023
      gender: both
      source: rerum
      active: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1a8cbv4VEa3ek6hfdZDg56P'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/mzrt/users/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'List of generic users'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=je33Bg7jDhplPfYUti2o1FUddvaQu3FpeKTuCnu0; expires=Sat, 30 Sep 2023 15:30:01 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fZb6Dgv1ca3dh8eVE6Pka54'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/mzrt/users/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'List of generic users'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: quia
        type: string
        enumValues: []
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: veum.leslie@example.net
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: 'Must contain at least one uppercase and one lowercase letter; must contain at least one symbol; must contain at least one number.'
        required: true
        example: 'H3u3h#H%#ywQEG.'
        type: string
        enumValues: []
        custom: []
      roles:
        name: roles
        description: ''
        required: true
        example: admin
        type: string
        enumValues:
          - development
          - superuser
          - admin
          - student
          - instructor
        custom: []
      address_id:
        name: address_id
        description: ''
        required: true
        example: voluptatem
        type: string
        enumValues: []
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        custom: []
      timezone_id:
        name: timezone_id
        description: ''
        required: true
        example: illum
        type: string
        enumValues: []
        custom: []
      group_id:
        name: group_id
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        custom: []
      document:
        name: document
        description: ''
        required: true
        example: asperiores
        type: string
        enumValues: []
        custom: []
      identity_registry:
        name: identity_registry
        description: ''
        required: true
        example: molestias
        type: string
        enumValues: []
        custom: []
      avatar:
        name: avatar
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      birth_date:
        name: birth_date
        description: 'Must be a valid date in the format <code>d/m/Y</code>.'
        required: true
        example: 30/09/2023
        type: string
        enumValues: []
        custom: []
      gender:
        name: gender
        description: ''
        required: true
        example: female
        type: string
        enumValues:
          - male
          - female
          - both
        custom: []
      where_know_us:
        name: where_know_us
        description: ''
        required: false
        example: eos
        type: string
        enumValues: []
        custom: []
      source:
        name: source
        description: ''
        required: true
        example: voluptatem
        type: string
        enumValues: []
        custom: []
      nickname:
        name: nickname
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      active:
        name: active
        description: ''
        required: true
        example: voluptatem
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: quia
      email: veum.leslie@example.net
      password: 'H3u3h#H%#ywQEG.'
      roles: admin
      address_id: voluptatem
      address: []
      timezone_id: illum
      group_id: architecto
      document: asperiores
      identity_registry: molestias
      birth_date: 30/09/2023
      gender: female
      where_know_us: eos
      source: voluptatem
      active: voluptatem
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fZVgkeEvaa415b63c8dDPh6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/mzrt/users/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'List of generic users'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer d6D6bcV51eaEv3kh8PZg4af'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/mzrt/user-groups
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Groups'
      subgroupDescription: 'List of groups of users'
      title: |-
        Displays a list of all groups of users. It accepts one parameter "all". Case has this parameter,
        it returns all groups of users with no paginate.
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=bfP39RdEwAIVZdjLyfkXji5HuRqfNfbE2MVbpBhD; expires=Sat, 30 Sep 2023 15:30:01 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8cZ6dvE31akPge4b5VaD6hf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/mzrt/user-groups
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Groups'
      subgroupDescription: 'List of groups of users'
      title: 'Store a new user group'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "Group's name."
        required: true
        example: Vip
        type: string
        enumValues: []
        custom: []
      discount:
        name: discount
        description: 'User groups can have discounts. Type: decimal.'
        required: false
        example: 33144495.41
        type: number
        enumValues: []
        custom: []
      commission:
        name: commission
        description: 'User groups can have commissions. Type: decimal.'
        required: false
        example: 279.88
        type: number
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: Vip
      discount: 33144495.41
      commission: 279.88
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aVE3c4DdZg68k1heaPf6v5b'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/mzrt/user-groups/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Groups'
      subgroupDescription: 'List of groups of users'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user group.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=UcT2kLd7R5Za0FpbQ8FsHOGmyFN32bZ4WhznVVfn; expires=Sat, 30 Sep 2023 15:30:01 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e6cdZbVa5g48af1Dhk63PEv'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/mzrt/user-groups/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Groups'
      subgroupDescription: 'List of groups of users'
      title: 'Update a specific user group'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user group.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "Group's name."
        required: true
        example: Vip
        type: string
        enumValues: []
        custom: []
      discount:
        name: discount
        description: 'User groups can have discounts. Type: decimal.'
        required: false
        example: 6810470.11
        type: number
        enumValues: []
        custom: []
      commission:
        name: commission
        description: 'User groups can have commissions. Type: decimal.'
        required: false
        example: 4.58
        type: number
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: Vip
      discount: 6810470.11
      commission: 4.58
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bdE361a4P5egf8hcVk6ZDva'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/mzrt/courses
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Courses
      subgroupDescription: 'Courses general management'
      title: 'Display a listing of the courses.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=ydO6m2V0VRArTOCeNBMo5ePvoL0h7IRXlb7Uz6na; expires=Sat, 30 Sep 2023 15:30:01 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4bPaEDg65ac8vfdke6Z1hV3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/mzrt/courses
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Courses
      subgroupDescription: 'Courses general management'
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      order:
        name: order
        description: ''
        required: false
        example: 18
        type: integer
        enumValues: []
        custom: []
      name:
        name: name
        description: ''
        required: true
        example: quas
        type: string
        enumValues: []
        custom: []
      slug:
        name: slug
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        custom: []
      level:
        name: level
        description: ''
        required: true
        example: advanced
        type: string
        enumValues:
          - begginner
          - intermediate
          - advanced
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Et id totam explicabo quis maiores.'
        type: string
        enumValues: []
        custom: []
      pre_requisites:
        name: pre_requisites
        description: ''
        required: false
        example: null
        type: object
        enumValues: []
        custom: []
      target:
        name: target
        description: ''
        required: false
        example: voluptatum
        type: string
        enumValues: []
        custom: []
      image_featured:
        name: image_featured
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      image_cover:
        name: image_cover
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      is_fifo:
        name: is_fifo
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        custom: []
      active:
        name: active
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        custom: []
      meta_description:
        name: meta_description
        description: ''
        required: false
        example: quo
        type: string
        enumValues: []
        custom: []
      meta_keywords:
        name: meta_keywords
        description: ''
        required: false
        example: tenetur
        type: string
        enumValues: []
        custom: []
      price:
        name: price
        description: ''
        required: true
        example: 11.5828631
        type: number
        enumValues: []
        custom: []
      access_months:
        name: access_months
        description: ''
        required: false
        example: 15
        type: integer
        enumValues: []
        custom: []
      started_at:
        name: started_at
        description: 'Must be a valid date.'
        required: false
        example: '2023-09-30T10:30:01'
        type: string
        enumValues: []
        custom: []
      ended_at:
        name: ended_at
        description: 'Must be a valid date.'
        required: false
        example: '2023-09-30T10:30:01'
        type: string
        enumValues: []
        custom: []
      amount:
        name: amount
        description: ''
        required: true
        example: 6172.42103
        type: number
        enumValues: []
        custom: []
      discount:
        name: discount
        description: ''
        required: true
        example: 640006253.44107
        type: number
        enumValues: []
        custom: []
      level_description:
        name: level_description
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      order: 18
      name: quas
      slug: et
      level: advanced
      description: 'Et id totam explicabo quis maiores.'
      target: voluptatum
      is_fifo: false
      active: false
      meta_description: quo
      meta_keywords: tenetur
      price: 11.5828631
      access_months: 15
      started_at: '2023-09-30T10:30:01'
      ended_at: '2023-09-30T10:30:01'
      amount: 6172.42103
      discount: 640006253.44107
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dcE8gvV4keb51PZa6D6ah3f'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/mzrt/courses/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Courses
      subgroupDescription: 'Courses general management'
      title: 'Display the specified resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the course.'
        required: true
        example: 2
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=jgSym4iJCuW6U2t3ljzQ8FYPKOu4udo8pbtowmaO; expires=Sat, 30 Sep 2023 15:30:01 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer va68d4153aZefE6DgVPhbck'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/mzrt/courses/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Courses
      subgroupDescription: 'Courses general management'
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the course.'
        required: true
        example: 5
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1dE8Dha6Vk6bf5gPvce4Z3a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/mzrt/courses/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Courses
      subgroupDescription: 'Courses general management'
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the course.'
        required: true
        example: 13
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 13
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6hD5agVPEdZ316eb48acvfk'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/mzrt/users/enable/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'List of generic users'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ck3fVPaaev65E8hDZ6bd1g4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/mzrt/users/disable/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'List of generic users'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer E8kaZD6bcefg1V4a3Pvhd65'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/mzrt/users/addresses/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Addresses'
      subgroupDescription: 'Methods from users addresses'
      title: 'Get all addresses from a given user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=Z5CRkiJ0RbbV0DSX9SANcfuLMGcx6LyDDC2je36i; expires=Sat, 30 Sep 2023 15:30:01 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer V86P463kfe5abhEdavZ1Dcg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/mzrt/users/addresses/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Addresses'
      subgroupDescription: 'Methods from users addresses'
      title: 'Store a new address for the specified user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      country_id:
        name: country_id
        description: ''
        required: true
        example: natus
        type: string
        enumValues: []
        custom: []
      name:
        name: name
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      zip_code:
        name: zip_code
        description: ''
        required: true
        example: distinctio
        type: string
        enumValues: []
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: error
        type: string
        enumValues: []
        custom: []
      number:
        name: number
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        custom: []
      complement:
        name: complement
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: quibusdam
        type: string
        enumValues: []
        custom: []
      city:
        name: city
        description: ''
        required: true
        example: commodi
        type: string
        enumValues: []
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: veniam
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      country_id: natus
      zip_code: distinctio
      address: error
      number: aut
      district: quibusdam
      city: commodi
      state: veniam
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6PDa58Eaf4ckZe316hdbvVg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/mzrt/users/addresses/{user_id}/{address_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Addresses'
      subgroupDescription: 'Methods from users addresses'
      title: 'Updates an existing address'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
      address_id:
        name: address_id
        description: 'The ID of the address.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      user_id: 1
      address_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      country_id:
        name: country_id
        description: ''
        required: true
        example: ipsam
        type: string
        enumValues: []
        custom: []
      name:
        name: name
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      zip_code:
        name: zip_code
        description: ''
        required: true
        example: minus
        type: string
        enumValues: []
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: minus
        type: string
        enumValues: []
        custom: []
      number:
        name: number
        description: ''
        required: true
        example: molestiae
        type: string
        enumValues: []
        custom: []
      complement:
        name: complement
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: voluptas
        type: string
        enumValues: []
        custom: []
      city:
        name: city
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: voluptate
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      country_id: ipsam
      zip_code: minus
      address: minus
      number: molestiae
      district: voluptas
      city: aut
      state: voluptate
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer h4akegfZa6D6d1v5Pb3V8cE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/mzrt/users/instructor/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Instructors
      subgroupDescription: 'Methods for Instructors'
      title: 'Stores the instructors data from a user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        custom: []
      commission:
        name: commission
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      bank_iban:
        name: bank_iban
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      bank_name:
        name: bank_name
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      identify_image:
        name: identify_image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      financial_approved:
        name: financial_approved
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      available_meetings:
        name: available_meetings
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      sex_meetings:
        name: sex_meetings
        description: ''
        required: false
        example: male
        type: string
        enumValues:
          - male
          - female
          - both
        custom: []
      meeting_type:
        name: meeting_type
        description: ''
        required: false
        example: female
        type: string
        enumValues:
          - male
          - female
          - both
        custom: []
    cleanBodyParameters:
      user_id: et
      sex_meetings: male
      meeting_type: female
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Pa6ebhD54gEZVva8d63fkc1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/mzrt/users/instructor/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Instructors
      subgroupDescription: 'Methods for Instructors'
      title: 'Updates the instructor information from a user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      commission:
        name: commission
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      bank_iban:
        name: bank_iban
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      bank_name:
        name: bank_name
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      identify_image:
        name: identify_image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      financial_approved:
        name: financial_approved
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      available_meetings:
        name: available_meetings
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      sex_meetings:
        name: sex_meetings
        description: ''
        required: false
        example: female
        type: string
        enumValues:
          - male
          - female
          - both
        custom: []
      meeting_type:
        name: meeting_type
        description: ''
        required: false
        example: female
        type: string
        enumValues:
          - male
          - female
          - both
        custom: []
    cleanBodyParameters:
      sex_meetings: female
      meeting_type: female
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer P14gaVeEadZ8cbk53vDfh66'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/mzrt/users/student/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'APIs for Students'
      title: 'Store a newly created student for an existent user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nickname:
        name: nickname
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      points:
        name: points
        description: ''
        required: true
        example: 16
        type: integer
        enumValues: []
        custom: []
    cleanBodyParameters:
      points: 16
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4ZvagfVPE1eD85c6dkab3h6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/mzrt/users/student/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'APIs for Students'
      title: 'Update the specified student from an existent user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nickname:
        name: nickname
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      points:
        name: points
        description: ''
        required: true
        example: 12
        type: integer
        enumValues: []
        custom: []
    cleanBodyParameters:
      points: 12
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4hac6dbk6DVEP5a13Zgev8f'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/mzrt/users/student/increase-points/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'APIs for Students'
      title: "Increase the student's point"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      points:
        name: points
        description: 'Must be at least 1.'
        required: true
        example: 90
        type: number
        enumValues: []
        custom: []
    cleanBodyParameters:
      points: 90
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer eZ41kag6ahdPv36EfcDVb85'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/mzrt/users/student/decrease-points/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'APIs for Students'
      title: "Decrease the student's point"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      points:
        name: points
        description: 'Must be at least 1.'
        required: true
        example: 28
        type: number
        enumValues: []
        custom: []
    cleanBodyParameters:
      points: 28
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 51VbEPcDe6ak43va6Zdhf8g'
    controller: null
    method: null
    route: null
    custom: []
