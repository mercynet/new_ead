name: Mozart
description: |-

  Class GroupController
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/mzrt/users
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'This controller handles all operations related to user management, including listing users, creating new users, updating existing users, enabling/disabling users, and deleting users.'
      title: 'List all users'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          set-cookie: 'ead_abtpe_session=ELG6KvUuo34B7IsOTpTQ8Pqp4XKqMndR7MDLG65k; expires=Sat, 19 Oct 2024 19:56:57 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Pb4cehdvkDg56fVEa318Za6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/mzrt/users
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'This controller handles all operations related to user management, including listing users, creating new users, updating existing users, enabling/disabling users, and deleting users.'
      title: 'Store a new user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: illo
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: towne.russel@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      group_id:
        name: group_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      document:
        name: document
        description: ''
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      identity_registry:
        name: identity_registry
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      avatar:
        name: avatar
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      birth_date:
        name: birth_date
        description: 'Must be a valid date in the format <code>d/m/Y</code>.'
        required: true
        example: 19/10/2024
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      gender:
        name: gender
        description: ''
        required: true
        example: male
        type: string
        enumValues:
          - male
          - female
          - both
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: admin
        type: string
        enumValues:
          - development
          - superuser
          - admin
          - student
          - instructor
        exampleWasSpecified: false
        nullable: false
        custom: []
      where_know_us:
        name: where_know_us
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      source:
        name: source
        description: ''
        required: true
        example: amet
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      nickname:
        name: nickname
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      active:
        name: active
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: illo
      email: towne.russel@example.com
      password: sit
      document: qui
      identity_registry: et
      birth_date: 19/10/2024
      gender: male
      type: admin
      source: amet
      active: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hbV54ZEDak81dfga3c6eP6v'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/mzrt/users/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'This controller handles all operations related to user management, including listing users, creating new users, updating existing users, enabling/disabling users, and deleting users.'
      title: 'Returns a specific user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          set-cookie: 'ead_abtpe_session=aKB2GuQHWa2ZQwonxjenRnm7fLQIvwFg5BeO96sa; expires=Sat, 19 Oct 2024 19:56:57 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer VfdP51hDa8kEZa63ve6b4gc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/mzrt/users/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'This controller handles all operations related to user management, including listing users, creating new users, updating existing users, enabling/disabling users, and deleting users.'
      title: 'Updates a specific user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: nisi
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: lora.stamm@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Must contain at least one uppercase and one lowercase letter; must contain at least one symbol; must contain at least one number.'
        required: false
        example: 'H3u3h#H%#ywQEG.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      role:
        name: role
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      group_id:
        name: group_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      document:
        name: document
        description: ''
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      identity_registry:
        name: identity_registry
        description: ''
        required: true
        example: nam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      avatar:
        name: avatar
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: development
        type: string
        enumValues:
          - development
          - superuser
          - admin
          - student
          - instructor
        exampleWasSpecified: false
        nullable: false
        custom: []
      birth_date:
        name: birth_date
        description: 'Must be a valid date in the format <code>d/m/Y</code>.'
        required: true
        example: 19/10/2024
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      gender:
        name: gender
        description: ''
        required: true
        example: female
        type: string
        enumValues:
          - male
          - female
          - both
        exampleWasSpecified: false
        nullable: false
        custom: []
      where_know_us:
        name: where_know_us
        description: ''
        required: false
        example: assumenda
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      source:
        name: source
        description: ''
        required: true
        example: tempore
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      nickname:
        name: nickname
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      active:
        name: active
        description: ''
        required: true
        example: non
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: nisi
      email: lora.stamm@example.net
      password: 'H3u3h#H%#ywQEG.'
      document: rerum
      identity_registry: nam
      type: development
      birth_date: 19/10/2024
      gender: female
      where_know_us: assumenda
      source: tempore
      active: non
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a56g1Zc6DPdeb4avEVhk3f8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/mzrt/users/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'This controller handles all operations related to user management, including listing users, creating new users, updating existing users, enabling/disabling users, and deleting users.'
      title: 'Delete a user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3b41fk6Pc6VgEaaZ8eh5Dvd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/mzrt/user-groups
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Groups'
      subgroupDescription: 'List of groups of users'
      title: |-
        Displays a list of all groups of users. It accepts one parameter "all". Case has this parameter,
        it returns all groups of users with no paginate.
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          set-cookie: 'ead_abtpe_session=9HvkGKUCl9udZjrFtgjIraw02ZoqFTlD2Cpt6eq5; expires=Sat, 19 Oct 2024 19:56:57 GMT; Max-Age=7199; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer d4e3vPcDbEVh861kZ5gaa6f'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/mzrt/user-groups
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Groups'
      subgroupDescription: 'List of groups of users'
      title: 'Store a new user group'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "Group's name."
        required: true
        example: Vip
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      discount:
        name: discount
        description: 'User groups can have discounts. Type: decimal.'
        required: false
        example: 35916831.77
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      commission:
        name: commission
        description: 'User groups can have commissions. Type: decimal.'
        required: false
        example: 82.57
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: Vip
      discount: 35916831.77
      commission: 82.57
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 465h1aPdDe8gvfkbE36ZaVc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/mzrt/user-groups/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Groups'
      subgroupDescription: 'List of groups of users'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user group.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          set-cookie: 'ead_abtpe_session=MEvtMlEScunzZ9X470kX00wZGIwkwPxOBVP8ErPL; expires=Sat, 19 Oct 2024 19:56:58 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6aZEeaf48Dh6kv1PV3dc5gb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/mzrt/user-groups/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Groups'
      subgroupDescription: 'List of groups of users'
      title: 'Update a specific user group'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user group.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "Group's name."
        required: true
        example: Vip
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      discount:
        name: discount
        description: 'User groups can have discounts. Type: decimal.'
        required: false
        example: 0.71
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      commission:
        name: commission
        description: 'User groups can have commissions. Type: decimal.'
        required: false
        example: 1806818.19
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: Vip
      discount: 0.71
      commission: 1806818.19
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer P86b13agDV5a6ck4dfZvEeh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/mzrt/courses
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Courses
      subgroupDescription: 'Courses general management'
      title: 'Display a listing of the courses.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          set-cookie: 'ead_abtpe_session=DfjYPHwFlecytiSz2oPot0mWAOYCOP2NqZFd6X4F; expires=Sat, 19 Oct 2024 19:56:58 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6Zev4V831fEdga5h6PakbDc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/mzrt/courses
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Courses
      subgroupDescription: 'Courses general management'
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      order:
        name: order
        description: 'The order of the course.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      name:
        name: name
        description: 'The name of the course.'
        required: true
        example: 'Mastering Laravel 11'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'The slug of the course.'
        required: true
        example: mastering-laravel-11
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      level:
        name: level
        description: 'The level of the course.'
        required: true
        example: intermediate
        type: string
        enumValues:
          - beginner
          - intermediate
          - advanced
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the course.'
        required: false
        example: 'A comprehensive course on mastering Laravel 11.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      pre_requisites:
        name: pre_requisites
        description: 'The pre-requisites for the course.'
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      target:
        name: target
        description: 'The target audience for the course.'
        required: false
        example: 'Developers looking to enhance their Laravel skills.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      image_featured:
        name: image_featured
        description: 'The featured image URL for the course.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      image_cover:
        name: image_cover
        description: 'The cover image URL for the course.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      is_fifo:
        name: is_fifo
        description: 'Whether the course is FIFO.'
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      active:
        name: active
        description: 'Whether the course is active.'
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      meta_description:
        name: meta_description
        description: 'The meta description for the course.'
        required: false
        example: 'Learn advanced Laravel 11 techniques.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_keywords:
        name: meta_keywords
        description: 'The meta keywords for the course.'
        required: false
        example: 'Laravel, PHP, web development'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      price:
        name: price
        description: 'The price of the course.'
        required: true
        example: 199.99
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      access_months:
        name: access_months
        description: 'The number of months the course is accessible.'
        required: false
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      started_at:
        name: started_at
        description: 'The start date of the course. Must be a valid date.'
        required: false
        example: '2024-10-19T11:22:20'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      ended_at:
        name: ended_at
        description: 'The end date of the course. Must be a valid date.'
        required: false
        example: '2025-10-19T11:22:20'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      amount:
        name: amount
        description: 'The amount of the course.'
        required: true
        example: 100.0
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      discount:
        name: discount
        description: 'The discount on the course.'
        required: true
        example: 20.0
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      level_description:
        name: level_description
        description: 'The level description of the course.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      course_modules:
        name: course_modules
        description: 'The modules of the course.'
        required: true
        example:
          - []
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].language_id':
        name: 'course_modules[].language_id'
        description: 'The language ID of the module.'
        required: true
        example: 1
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].name':
        name: 'course_modules[].name'
        description: 'The name of the module.'
        required: true
        example: 'Advanced Routing Techniques'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].slug':
        name: 'course_modules[].slug'
        description: 'The slug of the module.'
        required: true
        example: advanced-routing-techniques
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons':
        name: 'course_modules[].lessons'
        description: 'The lessons of the module.'
        required: true
        example:
          - []
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].order':
        name: 'course_modules[].lessons[].order'
        description: 'The order of the lesson.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].name':
        name: 'course_modules[].lessons[].name'
        description: 'The name of the lesson.'
        required: true
        example: 'Route Model Binding'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].slug':
        name: 'course_modules[].lessons[].slug'
        description: 'The slug of the lesson.'
        required: true
        example: route-model-binding
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].video_type':
        name: 'course_modules[].lessons[].video_type'
        description: 'The video type of the lesson.'
        required: true
        example: mp4
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].video_path':
        name: 'course_modules[].lessons[].video_path'
        description: 'The video path of the lesson.'
        required: true
        example: /videos/route-model-binding.mp4
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].video_duration':
        name: 'course_modules[].lessons[].video_duration'
        description: 'The video duration of the lesson.'
        required: true
        example: '10:00'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].video_downloadable':
        name: 'course_modules[].lessons[].video_downloadable'
        description: 'Whether the video is downloadable.'
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].summary':
        name: 'course_modules[].lessons[].summary'
        description: 'The summary of the lesson.'
        required: true
        example: 'Learn how to use route model binding in Laravel.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].description':
        name: 'course_modules[].lessons[].description'
        description: 'The description of the lesson.'
        required: true
        example: 'This lesson covers the basics of route model binding in Laravel.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].image_featured':
        name: 'course_modules[].lessons[].image_featured'
        description: 'The featured image URL of the lesson.'
        required: true
        example: /images/route-model-binding.jpg
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].meta_description':
        name: 'course_modules[].lessons[].meta_description'
        description: 'The meta description of the lesson.'
        required: true
        example: 'Learn route model binding in Laravel.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].meta_keywords':
        name: 'course_modules[].lessons[].meta_keywords'
        description: 'The meta keywords of the lesson.'
        required: true
        example: 'Laravel, routing, model binding'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].is_free':
        name: 'course_modules[].lessons[].is_free'
        description: 'Whether the lesson is free.'
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].is_commentable':
        name: 'course_modules[].lessons[].is_commentable'
        description: 'Whether the lesson is commentable.'
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].active':
        name: 'course_modules[].lessons[].active'
        description: 'Whether the lesson is active.'
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].started_at':
        name: 'course_modules[].lessons[].started_at'
        description: 'The start date of the lesson. Must be a valid date.'
        required: true
        example: '2024-10-19T11:22:20'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].ended_at':
        name: 'course_modules[].lessons[].ended_at'
        description: 'The end date of the lesson. Must be a valid date.'
        required: true
        example: '2025-10-19T11:22:20'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      order: 1
      name: 'Mastering Laravel 11'
      slug: mastering-laravel-11
      level: intermediate
      description: 'A comprehensive course on mastering Laravel 11.'
      target: 'Developers looking to enhance their Laravel skills.'
      is_fifo: false
      active: false
      meta_description: 'Learn advanced Laravel 11 techniques.'
      meta_keywords: 'Laravel, PHP, web development'
      price: 199.99
      access_months: 12
      started_at: '2024-10-19T11:22:20'
      ended_at: '2025-10-19T11:22:20'
      amount: 100.0
      discount: 20.0
      course_modules:
        -
          language_id: 1
          name: 'Advanced Routing Techniques'
          slug: advanced-routing-techniques
          lessons:
            -
              order: 1
              name: 'Route Model Binding'
              slug: route-model-binding
              video_type: mp4
              video_path: /videos/route-model-binding.mp4
              video_duration: '10:00'
              video_downloadable: false
              summary: 'Learn how to use route model binding in Laravel.'
              description: 'This lesson covers the basics of route model binding in Laravel.'
              image_featured: /images/route-model-binding.jpg
              meta_description: 'Learn route model binding in Laravel.'
              meta_keywords: 'Laravel, routing, model binding'
              is_free: false
              is_commentable: false
              active: false
              started_at: '2024-10-19T11:22:20'
              ended_at: '2025-10-19T11:22:20'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ZEPv5V63d8afbckgeh4a16D'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/mzrt/courses/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Courses
      subgroupDescription: 'Courses general management'
      title: 'Display the specified resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the course.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          set-cookie: 'ead_abtpe_session=u3vV9zw8nnHpphO19mFIzNrQGhj5ze2K4vX4eZFd; expires=Sat, 19 Oct 2024 19:56:58 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer E8dcZePkhga6b53VaD4fv61'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/mzrt/courses/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Courses
      subgroupDescription: 'Courses general management'
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the course.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      order:
        name: order
        description: 'The order of the course.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      name:
        name: name
        description: 'The name of the course.'
        required: true
        example: 'Mastering Laravel 11'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'The slug of the course.'
        required: true
        example: mastering-laravel-11
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      level:
        name: level
        description: 'The level of the course.'
        required: true
        example: intermediate
        type: string
        enumValues:
          - beginner
          - intermediate
          - advanced
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the course.'
        required: false
        example: 'A comprehensive course on mastering Laravel 11.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      pre_requisites:
        name: pre_requisites
        description: 'The pre-requisites for the course.'
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      target:
        name: target
        description: 'The target audience for the course.'
        required: false
        example: 'Developers looking to enhance their Laravel skills.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      image_featured:
        name: image_featured
        description: 'The featured image URL for the course.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      image_cover:
        name: image_cover
        description: 'The cover image URL for the course.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      is_fifo:
        name: is_fifo
        description: 'Whether the course is FIFO.'
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      active:
        name: active
        description: 'Whether the course is active.'
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      meta_description:
        name: meta_description
        description: 'The meta description for the course.'
        required: false
        example: 'Learn advanced Laravel 11 techniques.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_keywords:
        name: meta_keywords
        description: 'The meta keywords for the course.'
        required: false
        example: 'Laravel, PHP, web development'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      price:
        name: price
        description: 'The price of the course.'
        required: true
        example: 199.99
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      access_months:
        name: access_months
        description: 'The number of months the course is accessible.'
        required: false
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      started_at:
        name: started_at
        description: 'The start date of the course. Must be a valid date.'
        required: false
        example: '2024-10-19T11:22:20'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      ended_at:
        name: ended_at
        description: 'The end date of the course. Must be a valid date.'
        required: false
        example: '2025-10-19T11:22:20'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      amount:
        name: amount
        description: 'The amount of the course.'
        required: true
        example: 100.0
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      discount:
        name: discount
        description: 'The discount on the course.'
        required: true
        example: 20.0
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      level_description:
        name: level_description
        description: 'The level description of the course.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      course_modules:
        name: course_modules
        description: 'The modules of the course.'
        required: true
        example:
          - []
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].language_id':
        name: 'course_modules[].language_id'
        description: 'The language ID of the module.'
        required: true
        example: 1
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].name':
        name: 'course_modules[].name'
        description: 'The name of the module.'
        required: true
        example: 'Advanced Routing Techniques'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].slug':
        name: 'course_modules[].slug'
        description: 'The slug of the module.'
        required: true
        example: advanced-routing-techniques
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons':
        name: 'course_modules[].lessons'
        description: 'The lessons of the module.'
        required: true
        example:
          - []
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].order':
        name: 'course_modules[].lessons[].order'
        description: 'The order of the lesson.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].name':
        name: 'course_modules[].lessons[].name'
        description: 'The name of the lesson.'
        required: true
        example: 'Route Model Binding'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].slug':
        name: 'course_modules[].lessons[].slug'
        description: 'The slug of the lesson.'
        required: true
        example: route-model-binding
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].video_type':
        name: 'course_modules[].lessons[].video_type'
        description: 'The video type of the lesson.'
        required: true
        example: mp4
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].video_path':
        name: 'course_modules[].lessons[].video_path'
        description: 'The video path of the lesson.'
        required: true
        example: /videos/route-model-binding.mp4
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].video_duration':
        name: 'course_modules[].lessons[].video_duration'
        description: 'The video duration of the lesson.'
        required: true
        example: '10:00'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].video_downloadable':
        name: 'course_modules[].lessons[].video_downloadable'
        description: 'Whether the video is downloadable.'
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].summary':
        name: 'course_modules[].lessons[].summary'
        description: 'The summary of the lesson.'
        required: true
        example: 'Learn how to use route model binding in Laravel.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].description':
        name: 'course_modules[].lessons[].description'
        description: 'The description of the lesson.'
        required: true
        example: 'This lesson covers the basics of route model binding in Laravel.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].image_featured':
        name: 'course_modules[].lessons[].image_featured'
        description: 'The featured image URL of the lesson.'
        required: true
        example: /images/route-model-binding.jpg
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].meta_description':
        name: 'course_modules[].lessons[].meta_description'
        description: 'The meta description of the lesson.'
        required: true
        example: 'Learn route model binding in Laravel.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].meta_keywords':
        name: 'course_modules[].lessons[].meta_keywords'
        description: 'The meta keywords of the lesson.'
        required: true
        example: 'Laravel, routing, model binding'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].is_free':
        name: 'course_modules[].lessons[].is_free'
        description: 'Whether the lesson is free.'
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].is_commentable':
        name: 'course_modules[].lessons[].is_commentable'
        description: 'Whether the lesson is commentable.'
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].active':
        name: 'course_modules[].lessons[].active'
        description: 'Whether the lesson is active.'
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].started_at':
        name: 'course_modules[].lessons[].started_at'
        description: 'The start date of the lesson. Must be a valid date.'
        required: true
        example: '2024-10-19T11:22:20'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'course_modules[].lessons[].ended_at':
        name: 'course_modules[].lessons[].ended_at'
        description: 'The end date of the lesson. Must be a valid date.'
        required: true
        example: '2025-10-19T11:22:20'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      order: 1
      name: 'Mastering Laravel 11'
      slug: mastering-laravel-11
      level: intermediate
      description: 'A comprehensive course on mastering Laravel 11.'
      target: 'Developers looking to enhance their Laravel skills.'
      is_fifo: false
      active: false
      meta_description: 'Learn advanced Laravel 11 techniques.'
      meta_keywords: 'Laravel, PHP, web development'
      price: 199.99
      access_months: 12
      started_at: '2024-10-19T11:22:20'
      ended_at: '2025-10-19T11:22:20'
      amount: 100.0
      discount: 20.0
      course_modules:
        -
          language_id: 1
          name: 'Advanced Routing Techniques'
          slug: advanced-routing-techniques
          lessons:
            -
              order: 1
              name: 'Route Model Binding'
              slug: route-model-binding
              video_type: mp4
              video_path: /videos/route-model-binding.mp4
              video_duration: '10:00'
              video_downloadable: false
              summary: 'Learn how to use route model binding in Laravel.'
              description: 'This lesson covers the basics of route model binding in Laravel.'
              image_featured: /images/route-model-binding.jpg
              meta_description: 'Learn route model binding in Laravel.'
              meta_keywords: 'Laravel, routing, model binding'
              is_free: false
              is_commentable: false
              active: false
              started_at: '2024-10-19T11:22:20'
              ended_at: '2025-10-19T11:22:20'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer VDfcvak3h6Z5d6gP4Ea8eb1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/mzrt/courses/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Courses
      subgroupDescription: 'Courses general management'
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the course.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6bDagE83df46VPec5hk1vZa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/mzrt/settings
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: |-
        Settings

        This class is responsible for handling the actions related to settings.
      subgroupDescription: ''
      title: 'Retrieves a collection of settings.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          set-cookie: 'ead_abtpe_session=dQvwQNTAlF2o4bumeGtMS3lIwZLyQcNMfn00ucQy; expires=Sat, 19 Oct 2024 19:56:58 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hbf6dvk6g34aPeZVD81cE5a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/mzrt/settings
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: |-
        Settings

        This class is responsible for handling the actions related to settings.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Za1DaPvebf53cV4g68hk6Ed'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/mzrt/settings/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: |-
        Settings

        This class is responsible for handling the actions related to settings.
      subgroupDescription: ''
      title: 'Fetches and returns the resource representation of a specific Setting.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the setting.'
        required: true
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 13
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          set-cookie: 'ead_abtpe_session=ahOgcVuIVZuBUvIa9QECrRUIPCyhFGuPJs5Xnk8L; expires=Sat, 19 Oct 2024 19:56:58 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer baf6hZacD6V8d13gvPe45kE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/mzrt/settings/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: |-
        Settings

        This class is responsible for handling the actions related to settings.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the setting.'
        required: true
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 12
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer faPVE3k1e5bZ46D8ag6vcdh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/mzrt/settings/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: |-
        Settings

        This class is responsible for handling the actions related to settings.
      subgroupDescription: ''
      title: 'Deletes a specific Setting.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the setting.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer k4faaZ68dv1bDcegEVh365P'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/mzrt/roles
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: |-
        Users
        Resources for users roles

        This class is responsible for handling user-related requests and actions.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          set-cookie: 'ead_abtpe_session=hyqxVYqOJe4viuv5fM4AfzhSTDfeKyByhweyBpiz; expires=Sat, 19 Oct 2024 19:56:58 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer cVhZPE1f8vg6ba563edD4ka'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/mzrt/roles
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: |-
        Users
        Resources for users roles

        This class is responsible for handling user-related requests and actions.
      subgroupDescription: ''
      title: 'Method to store a new role in the storage'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: dolores
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      guard_name:
        name: guard_name
        description: ''
        required: true
        example: hic
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      group_name:
        name: group_name
        description: ''
        required: true
        example: recusandae
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      permissions:
        name: permissions
        description: 'The <code>id</code> of an existing record in the permissions table.'
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: dolores
      guard_name: hic
      group_name: recusandae
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer eb61D8PEVhdaZfgv536c4ak'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/mzrt/roles/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: |-
        Users
        Resources for users roles

        This class is responsible for handling user-related requests and actions.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          set-cookie: 'ead_abtpe_session=kjMlhxOyzYyJHbrkB5cVxgOuKIUaZjJs0HfVZEit; expires=Sat, 19 Oct 2024 19:56:58 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 86k5EbgfPacd34V6ahZveD1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/mzrt/roles/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: |-
        Users
        Resources for users roles

        This class is responsible for handling user-related requests and actions.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: dolores
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      guard_name:
        name: guard_name
        description: ''
        required: true
        example: soluta
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      group_name:
        name: group_name
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      permissions:
        name: permissions
        description: 'The <code>id</code> of an existing record in the permissions table.'
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: dolores
      guard_name: soluta
      group_name: consequatur
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aghDabkcE54Z1f8dVve6P36'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/mzrt/roles/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: |-
        Users
        Resources for users roles

        This class is responsible for handling user-related requests and actions.
      subgroupDescription: ''
      title: 'Remove a role from the database'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 56adhaZ8PVf3DEg4bvc1ek6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/mzrt/categories
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: |-
        Categories

        This class is responsible for handling the actions related to categories.
      subgroupDescription: ''
      title: 'Retrieves a collection of categories.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          set-cookie: 'ead_abtpe_session=ihKg0M4FUliSw9YHO1BINnCpLYPRvaiHWfDWkXLQ; expires=Sat, 19 Oct 2024 19:56:58 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Zahkv6cb4DV6EgfP1ed85a3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/mzrt/categories
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: |-
        Categories

        This class is responsible for handling the actions related to categories.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      category_id:
        name: category_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      name:
        name: name
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: ''
        required: true
        example: earum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      order:
        name: order
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      is_showcase:
        name: is_showcase
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      active:
        name: active
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      image:
        name: image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: aut
      slug: earum
      is_showcase: false
      active: true
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kv18aE6fbV45hZ63PgdDcae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/mzrt/categories/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: |-
        Categories

        This class is responsible for handling the actions related to categories.
      subgroupDescription: ''
      title: 'Fetches and returns the resource representation of a specific Category.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          set-cookie: 'ead_abtpe_session=MXdcitp27vIfFFFMS1bVb6Y749otpYcoXDIBmKtG; expires=Sat, 19 Oct 2024 19:56:58 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6hP56cfDvE3e8bkd41aagZV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/mzrt/categories/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: |-
        Categories

        This class is responsible for handling the actions related to categories.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      category_id:
        name: category_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      name:
        name: name
        description: ''
        required: true
        example: enim
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: ''
        required: true
        example: at
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      order:
        name: order
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      is_showcase:
        name: is_showcase
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      active:
        name: active
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      image:
        name: image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: enim
      slug: at
      is_showcase: true
      active: true
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer haPkcD6f3V46daE1eZg5vb8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/mzrt/categories/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: |-
        Categories

        This class is responsible for handling the actions related to categories.
      subgroupDescription: ''
      title: 'Deletes a specific Category.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6vP5dfkVea84hbg6ac1DZ3E'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/mzrt/users/enable/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'This controller handles all operations related to user management, including listing users, creating new users, updating existing users, enabling/disabling users, and deleting users.'
      title: 'Enable a user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fD1vPa5ce3hbd68E64ZgVka'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/mzrt/users/disable/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'This controller handles all operations related to user management, including listing users, creating new users, updating existing users, enabling/disabling users, and deleting users.'
      title: 'Disable a user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer VE64P5eDaad8Z6fv1kgcb3h'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/mzrt/users/addresses/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Addresses'
      subgroupDescription: 'Methods from users addresses'
      title: 'Get all addresses from a given user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          set-cookie: 'ead_abtpe_session=Wi8dFcPkW9QzmYoE15grAEE3nZSq3QLDT9RSuU4x; expires=Sat, 19 Oct 2024 19:56:58 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dP1EZga3ahfDv6cV5k8b4e6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/mzrt/users/addresses/postal-code/{postalCode}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Addresses'
      subgroupDescription: 'Methods from users addresses'
      title: 'Get address by postal code.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      postalCode:
        name: postalCode
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      postalCode: aut
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          set-cookie: 'ead_abtpe_session=JA0MukJ1mi1N7H5nRfvTtl90K73WChrgJuIxt7b3; expires=Sat, 19 Oct 2024 19:56:58 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a634veZg1cVkaDhd6Eb8f5P'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/mzrt/users/addresses/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Addresses'
      subgroupDescription: 'Methods from users addresses'
      title: 'Store a new address for the specified user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      zip_code:
        name: zip_code
        description: ''
        required: true
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: ex
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      number:
        name: number
        description: ''
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      complement:
        name: complement
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: quis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      city:
        name: city
        description: ''
        required: true
        example: sed
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      zip_code: 18
      address: ex
      number: rerum
      district: quis
      city: sed
      state: voluptatem
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8hc16E6aveZfb5dV3Pa4Dkg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/mzrt/users/addresses/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Addresses'
      subgroupDescription: 'Methods from users addresses'
      title: 'Updates an existing address'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the address.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      zip_code:
        name: zip_code
        description: ''
        required: true
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: error
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      number:
        name: number
        description: ''
        required: true
        example: enim
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      complement:
        name: complement
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      city:
        name: city
        description: ''
        required: true
        example: nostrum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: possimus
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      zip_code: 8
      address: error
      number: enim
      district: et
      city: nostrum
      state: possimus
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4D3veg6Pa15ZbEdaV8f6chk'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/mzrt/users/addresses/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Addresses'
      subgroupDescription: 'Methods from users addresses'
      title: 'Deletes an address'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the address.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer cZ36eP85av41dDhkVfEab6g'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/mzrt/users/instructor/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Instructors
      subgroupDescription: 'Methods for Instructors'
      title: 'Stores the instructors data from a user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: true
        example: perspiciatis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      commission:
        name: commission
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      bank_iban:
        name: bank_iban
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      bank_name:
        name: bank_name
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      identify_image:
        name: identify_image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      financial_approved:
        name: financial_approved
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      available_meetings:
        name: available_meetings
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sex_meetings:
        name: sex_meetings
        description: ''
        required: false
        example: male
        type: string
        enumValues:
          - male
          - female
          - both
        exampleWasSpecified: false
        nullable: true
        custom: []
      meeting_type:
        name: meeting_type
        description: ''
        required: false
        example: both
        type: string
        enumValues:
          - male
          - female
          - both
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      user_id: perspiciatis
      sex_meetings: male
      meeting_type: both
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 85hd14g6cbVDZEa3fev6akP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/mzrt/users/instructor/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Instructors
      subgroupDescription: 'Methods for Instructors'
      title: 'Updates the instructor information from a user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      commission:
        name: commission
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      bank_iban:
        name: bank_iban
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      bank_name:
        name: bank_name
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      identify_image:
        name: identify_image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      financial_approved:
        name: financial_approved
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      available_meetings:
        name: available_meetings
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sex_meetings:
        name: sex_meetings
        description: ''
        required: false
        example: both
        type: string
        enumValues:
          - male
          - female
          - both
        exampleWasSpecified: false
        nullable: true
        custom: []
      meeting_type:
        name: meeting_type
        description: ''
        required: false
        example: both
        type: string
        enumValues:
          - male
          - female
          - both
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      sex_meetings: both
      meeting_type: both
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1ZcVfgD68Eh6e53vaaPkbd4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/mzrt/users/student/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'APIs for Students'
      title: 'Store a newly created student for an existent user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nickname:
        name: nickname
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      points:
        name: points
        description: ''
        required: true
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      points: 11
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3g5afZVeDkaEd6P4b1hc68v'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/mzrt/users/student/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'APIs for Students'
      title: 'Update the specified student from an existent user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nickname:
        name: nickname
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      points:
        name: points
        description: ''
        required: true
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      points: 15
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8g1d6bVPZ6hvDakf5Ea3c4e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/mzrt/users/student/increase-points/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'APIs for Students'
      title: "Increase the student's point"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      points:
        name: points
        description: 'Must be at least 1.'
        required: true
        example: 90
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      points: 90
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Vv8e3daafDPc1gbh5k646ZE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/mzrt/users/student/decrease-points/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'APIs for Students'
      title: "Decrease the student's point"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      points:
        name: points
        description: 'Must be at least 1.'
        required: true
        example: 86
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      points: 86
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer EZvfaP46eh81bagkc5D6dV3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/mzrt/roles/groups
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: |-
        Users
        Resources for users roles

        This class is responsible for handling user-related requests and actions.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          set-cookie: 'ead_abtpe_session=VTdAZQW4Tser2nLfv9dC7FTq9yebtSbihsveWVze; expires=Sat, 19 Oct 2024 19:56:59 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4b81fdZ63Vgavh6DPeaEk5c'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/mzrt/roles/create-simple
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: |-
        Users
        Resources for users roles

        This class is responsible for handling user-related requests and actions.
      subgroupDescription: ''
      title: 'Method to store a new role in the storage but not from bulk'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: quas
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      guard_name:
        name: guard_name
        description: ''
        required: true
        example: eos
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      group_name:
        name: group_name
        description: ''
        required: true
        example: incidunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      permissions:
        name: permissions
        description: 'The <code>id</code> of an existing record in the permissions table.'
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: quas
      guard_name: eos
      group_name: incidunt
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer egb3kdZD6v5Ef8aV4ahc6P1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/mzrt/roles/permissions
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: |-
        Users
        Resources for users roles

        This class is responsible for handling user-related requests and actions.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          set-cookie: 'ead_abtpe_session=YxrrtuWxFdYpBtY7rbAvkSv2Vfcw0JX4T627BRmg; expires=Sat, 19 Oct 2024 19:56:59 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kcZEh35D61abdvVa846gfPe'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/mzrt/groups
    metadata:
      groupName: Mozart
      groupDescription: |-

        Class GroupController
      subgroup: |-
        Users

        This class is responsible for handling the requests related to the Group resource.
      subgroupDescription: ''
      title: 'Retrieves a collection of group users based on the provided request.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          set-cookie: 'ead_abtpe_session=mbu98xlOlxwAmeaYoLQ4u0vyk69WX7rgBkaXinsh; expires=Sat, 19 Oct 2024 19:56:59 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer EP3D6a8khaZV641e5vfcdbg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/mzrt/groups/all
    metadata:
      groupName: Mozart
      groupDescription: |-

        Class GroupController
      subgroup: |-
        Users

        This class is responsible for handling the requests related to the Group resource.
      subgroupDescription: ''
      title: 'Retrieve all group users.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          set-cookie: 'ead_abtpe_session=R9eMNXoVXu55LUKTp7x65BMTAhaOXrHhi6NsPW4u; expires=Sat, 19 Oct 2024 19:56:59 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5cP4dVg3vae68Z1D6bafkhE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/mzrt/groups/{id}'
    metadata:
      groupName: Mozart
      groupDescription: |-

        Class GroupController
      subgroup: |-
        Users

        This class is responsible for handling the requests related to the Group resource.
      subgroupDescription: ''
      title: 'Get a specific resource'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the group.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          set-cookie: 'ead_abtpe_session=lzN0Jf4QQCBdlP5gy2rYKeyWvEG9sPovQeDufAHz; expires=Sat, 19 Oct 2024 19:56:59 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer khvE4cPa68g6fZbd351aDeV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/mzrt/groups
    metadata:
      groupName: Mozart
      groupDescription: |-

        Class GroupController
      subgroup: |-
        Users

        This class is responsible for handling the requests related to the Group resource.
      subgroupDescription: ''
      title: 'Store a new resource'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "Group's name."
        required: true
        example: Vip
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      discount:
        name: discount
        description: 'User groups can have discounts. Type: decimal.'
        required: false
        example: 57810.64
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      commission:
        name: commission
        description: 'User groups can have commissions. Type: decimal.'
        required: false
        example: 30552101.93
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: Vip
      discount: 57810.64
      commission: 30552101.93
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6bVZ3d4cfaDe51vE68Pahgk'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/mzrt/groups/{id}'
    metadata:
      groupName: Mozart
      groupDescription: |-

        Class GroupController
      subgroup: |-
        Users

        This class is responsible for handling the requests related to the Group resource.
      subgroupDescription: ''
      title: 'Update a group'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the group.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "Group's name."
        required: true
        example: Vip
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      discount:
        name: discount
        description: 'User groups can have discounts. Type: decimal.'
        required: false
        example: 105.36
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      commission:
        name: commission
        description: 'User groups can have commissions. Type: decimal.'
        required: false
        example: 263064.03
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: Vip
      discount: 105.36
      commission: 263064.03
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vZebE6acDP4gdh1fa53kV68'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/mzrt/groups/{id}'
    metadata:
      groupName: Mozart
      groupDescription: |-

        Class GroupController
      subgroup: |-
        Users

        This class is responsible for handling the requests related to the Group resource.
      subgroupDescription: ''
      title: 'Remove a group from the database'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the group.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4v61akZEcgP856hVd3Dbefa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/mzrt/categories/all
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: |-
        Categories

        This class is responsible for handling the actions related to categories.
      subgroupDescription: ''
      title: 'Retrieves a collection of categories.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          set-cookie: 'ead_abtpe_session=iP39YtGKT9bMlbNaL14j8Q0tEP9oTthv0CxjUvnN; expires=Sat, 19 Oct 2024 19:56:59 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DbE8eka3Zf4g6aVv1Pcd65h'
    controller: null
    method: null
    route: null
    custom: []
