## Autogenerated by Scribe. DO NOT MODIFY.

name: Mozart
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/mzrt/users
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'List of generic users'
      title: 'List all users'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=byt1dF57ECJLYkuEJTm7nrKneB5y9HlGTjFaw2dj; expires=Mon, 08 Jan 2024 21:58:56 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gf3ek1E6568bhc4avDPZVad'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/mzrt/users
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'List of generic users'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: deserunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: jerde.george@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: id
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      role:
        name: role
        description: ''
        required: true
        example: superuser
        type: string
        enumValues:
          - development
          - superuser
          - admin
          - student
          - instructor
        exampleWasSpecified: false
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      group_id:
        name: group_id
        description: ''
        required: true
        example: itaque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      document:
        name: document
        description: ''
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      identity_registry:
        name: identity_registry
        description: ''
        required: true
        example: voluptas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      avatar:
        name: avatar
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      birth_date:
        name: birth_date
        description: 'Must be a valid date in the format <code>d/m/Y</code>.'
        required: true
        example: 08/01/2024
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      gender:
        name: gender
        description: ''
        required: true
        example: male
        type: string
        enumValues:
          - male
          - female
          - both
        exampleWasSpecified: false
        custom: []
      where_know_us:
        name: where_know_us
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      source:
        name: source
        description: ''
        required: true
        example: in
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      nickname:
        name: nickname
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      active:
        name: active
        description: ''
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: deserunt
      email: jerde.george@example.net
      password: id
      role: superuser
      address: []
      group_id: itaque
      document: est
      identity_registry: voluptas
      birth_date: 08/01/2024
      gender: male
      source: in
      active: true
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=nfgiT0BlTs5vUFYpkrBZ5fnGGD6ZsaRaonssNmmJ; expires=Mon, 08 Jan 2024 21:58:56 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1b5acEeh3D6PV4fZdvgak68'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/mzrt/users/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'List of generic users'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=6ZfMylND0T3kcUzIXEUEJ628bRfErUfeD1LynJqc; expires=Mon, 08 Jan 2024 21:58:56 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PdhZEDvV166k4358gaafbec'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/mzrt/users/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'List of generic users'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: nulla
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: elissa01@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'Must contain at least one uppercase and one lowercase letter; must contain at least one symbol; must contain at least one number.'
        required: true
        example: 'H3u3h#H%#ywQEG.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      roles:
        name: roles
        description: ''
        required: true
        example: admin
        type: string
        enumValues:
          - development
          - superuser
          - admin
          - student
          - instructor
        exampleWasSpecified: false
        custom: []
      address_id:
        name: address_id
        description: ''
        required: true
        example: natus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      group_id:
        name: group_id
        description: ''
        required: true
        example: odit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      document:
        name: document
        description: ''
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      identity_registry:
        name: identity_registry
        description: ''
        required: true
        example: nihil
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      avatar:
        name: avatar
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      birth_date:
        name: birth_date
        description: 'Must be a valid date in the format <code>d/m/Y</code>.'
        required: true
        example: 08/01/2024
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      gender:
        name: gender
        description: ''
        required: true
        example: female
        type: string
        enumValues:
          - male
          - female
          - both
        exampleWasSpecified: false
        custom: []
      where_know_us:
        name: where_know_us
        description: ''
        required: false
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      source:
        name: source
        description: ''
        required: true
        example: rem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      nickname:
        name: nickname
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      active:
        name: active
        description: ''
        required: true
        example: magnam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: nulla
      email: elissa01@example.net
      password: 'H3u3h#H%#ywQEG.'
      roles: admin
      address_id: natus
      address: []
      group_id: odit
      document: ut
      identity_registry: nihil
      birth_date: 08/01/2024
      gender: female
      where_know_us: aut
      source: rem
      active: magnam
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=sQYGMLUeVqz7zVHOwv7RDkk92fuQ8qXZtkR5F3Zi; expires=Mon, 08 Jan 2024 21:58:56 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer VD8b6ahZPe3dfva1c46kEg5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/mzrt/users/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'List of generic users'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=ll8o2L05Rbwwn5AbwRVWu3GCdwJA6oOnT7hJ8yLz; expires=Mon, 08 Jan 2024 21:58:56 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g83aEPv15ehaZ6Vb4kfdcD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/mzrt/user-groups
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Groups'
      subgroupDescription: 'List of groups of users'
      title: |-
        Displays a list of all groups of users. It accepts one parameter "all". Case has this parameter,
        it returns all groups of users with no paginate.
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=uUrj4IkiU9K6XTIBLR6REPTAevxyEl7dgyp9EEJB; expires=Mon, 08 Jan 2024 21:58:56 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hgadVkab8e6PZ1c53f4DvE6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/mzrt/user-groups
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Groups'
      subgroupDescription: 'List of groups of users'
      title: 'Store a new user group'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "Group's name."
        required: true
        example: Vip
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      discount:
        name: discount
        description: 'User groups can have discounts. Type: decimal.'
        required: false
        example: 41179911.71
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
      commission:
        name: commission
        description: 'User groups can have commissions. Type: decimal.'
        required: false
        example: 10463.29
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: Vip
      discount: 41179911.71
      commission: 10463.29
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=IvRAhYZkcg1uHe3BTP4SJrqPCeD9UP0kQOcswGND; expires=Mon, 08 Jan 2024 21:58:56 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5ZVaE4vD6c3fbh8daP6ek1g'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/mzrt/user-groups/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Groups'
      subgroupDescription: 'List of groups of users'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user group.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=qVJBYfTDh36owpMJXOrCp07bjAr8aDMn4LEvw7px; expires=Mon, 08 Jan 2024 21:58:56 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer b6P8Z41vVgkaa3c5Dhf6dEe'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/mzrt/user-groups/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Groups'
      subgroupDescription: 'List of groups of users'
      title: 'Update a specific user group'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user group.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "Group's name."
        required: true
        example: Vip
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      discount:
        name: discount
        description: 'User groups can have discounts. Type: decimal.'
        required: false
        example: 68479436.46
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
      commission:
        name: commission
        description: 'User groups can have commissions. Type: decimal.'
        required: false
        example: 596.38
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: Vip
      discount: 68479436.46
      commission: 596.38
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=RsJLH2ydfWSLQVcXWEgWhEciOP8oRFpBrz1GzzYs; expires=Mon, 08 Jan 2024 21:58:56 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer V1akef3dZEa6PgDc6v8b54h'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/mzrt/courses
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Courses
      subgroupDescription: 'Courses general management'
      title: 'Display a listing of the courses.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=pNx2HdUtBSp8FzSF2PQhLjKk8tB0MgqIKmkgqXEp; expires=Mon, 08 Jan 2024 21:58:56 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer b6hfkV34g8dD16ceZva5EaP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/mzrt/courses
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Courses
      subgroupDescription: 'Courses general management'
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      order:
        name: order
        description: ''
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: ''
        required: true
        example: nesciunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      slug:
        name: slug
        description: ''
        required: true
        example: eveniet
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      level:
        name: level
        description: ''
        required: true
        example: begginner
        type: string
        enumValues:
          - begginner
          - intermediate
          - advanced
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Provident a illo reprehenderit soluta.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      pre_requisites:
        name: pre_requisites
        description: ''
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      target:
        name: target
        description: ''
        required: false
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      image_featured:
        name: image_featured
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      image_cover:
        name: image_cover
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      is_fifo:
        name: is_fifo
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      active:
        name: active
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      meta_description:
        name: meta_description
        description: ''
        required: false
        example: modi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      meta_keywords:
        name: meta_keywords
        description: ''
        required: false
        example: molestias
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      price:
        name: price
        description: ''
        required: true
        example: 428134.0
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
      access_months:
        name: access_months
        description: ''
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      started_at:
        name: started_at
        description: 'Must be a valid date.'
        required: false
        example: '2024-01-08T16:58:56'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      ended_at:
        name: ended_at
        description: 'Must be a valid date.'
        required: false
        example: '2024-01-08T16:58:56'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      amount:
        name: amount
        description: ''
        required: true
        example: 0.255
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
      discount:
        name: discount
        description: ''
        required: true
        example: 4994596.413375
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
      level_description:
        name: level_description
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      course_module:
        name: course_module
        description: ''
        required: false
        example:
          - []
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'course_module[].language_id':
        name: 'course_module[].language_id'
        description: ''
        required: true
        example: sunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'course_module[].name':
        name: 'course_module[].name'
        description: ''
        required: true
        example: voluptatibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'course_module[].slug':
        name: 'course_module[].slug'
        description: ''
        required: true
        example: assumenda
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      lesson:
        name: lesson
        description: ''
        required: false
        example:
          - []
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'lesson[].order':
        name: 'lesson[].order'
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'lesson[].name':
        name: 'lesson[].name'
        description: ''
        required: true
        example: possimus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'lesson[].slug':
        name: 'lesson[].slug'
        description: ''
        required: true
        example: ea
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'lesson[].video_type':
        name: 'lesson[].video_type'
        description: ''
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'lesson[].video_path':
        name: 'lesson[].video_path'
        description: ''
        required: true
        example: vel
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'lesson[].video_duration':
        name: 'lesson[].video_duration'
        description: ''
        required: true
        example: vel
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'lesson[].video_downloadable':
        name: 'lesson[].video_downloadable'
        description: ''
        required: true
        example: velit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'lesson[].summary':
        name: 'lesson[].summary'
        description: ''
        required: true
        example: repudiandae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'lesson[].description':
        name: 'lesson[].description'
        description: ''
        required: true
        example: necessitatibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'lesson[].image_featured':
        name: 'lesson[].image_featured'
        description: ''
        required: true
        example: modi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'lesson[].meta_description':
        name: 'lesson[].meta_description'
        description: ''
        required: true
        example: ad
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'lesson[].meta_keywords':
        name: 'lesson[].meta_keywords'
        description: ''
        required: true
        example: in
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'lesson[].is_free':
        name: 'lesson[].is_free'
        description: ''
        required: true
        example: perspiciatis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'lesson[].is_commentable':
        name: 'lesson[].is_commentable'
        description: ''
        required: true
        example: sed
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'lesson[].active':
        name: 'lesson[].active'
        description: ''
        required: true
        example: reprehenderit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'lesson[].started_at':
        name: 'lesson[].started_at'
        description: ''
        required: true
        example: nemo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'lesson[].ended_at':
        name: 'lesson[].ended_at'
        description: ''
        required: true
        example: eos
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      order: 10
      name: nesciunt
      slug: eveniet
      level: begginner
      description: 'Provident a illo reprehenderit soluta.'
      target: aut
      is_fifo: false
      active: false
      meta_description: modi
      meta_keywords: molestias
      price: 428134.0
      access_months: 16
      started_at: '2024-01-08T16:58:56'
      ended_at: '2024-01-08T16:58:56'
      amount: 0.255
      discount: 4994596.413375
      course_module:
        -
          language_id: sunt
          name: voluptatibus
          slug: assumenda
      lesson:
        -
          order: et
          name: possimus
          slug: ea
          video_type: rerum
          video_path: vel
          video_duration: vel
          video_downloadable: velit
          summary: repudiandae
          description: necessitatibus
          image_featured: modi
          meta_description: ad
          meta_keywords: in
          is_free: perspiciatis
          is_commentable: sed
          active: reprehenderit
          started_at: nemo
          ended_at: eos
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=madWtpXeENkW6pPqWYisowOFpoS4dmpkeCFrOHEU; expires=Mon, 08 Jan 2024 21:58:56 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer caEZgv15def6abD64Vkh83P'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/mzrt/courses/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Courses
      subgroupDescription: 'Courses general management'
      title: 'Display the specified resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the course.'
        required: true
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=DDiqTxe5Q2HB0iTxC6u529c7ufUGVyE7FDTLisD3; expires=Mon, 08 Jan 2024 21:58:56 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fac5e16h68dED3k4vbaPVZg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/mzrt/courses/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Courses
      subgroupDescription: 'Courses general management'
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the course.'
        required: true
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=ezPisOV01Lv17Bfw4u8ILIEY3PJQWQD5RFvbB7Eq; expires=Mon, 08 Jan 2024 21:58:56 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 856Zaec1Pa6dhVE3kbvD4gf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/mzrt/courses/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Courses
      subgroupDescription: 'Courses general management'
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the course.'
        required: true
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=o4etdN51gI3Pk4ZGWSZvbSDJjgdomeA4VJgUIlNO; expires=Mon, 08 Jan 2024 21:58:56 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1hD4fvZda5k3e86aEPcVg6b'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/mzrt/users/enable/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'List of generic users'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=m3Nsl6TVQ7m2NadYgzNw8ss46QfCkLPtPzMcd35M; expires=Mon, 08 Jan 2024 21:58:56 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4geDa618bEakvh36PVdcZ5f'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/mzrt/users/disable/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'List of generic users'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=LbzqqthdcpcNINcZy1byJxYRHKMckoldzdb7GLSS; expires=Mon, 08 Jan 2024 21:58:56 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6P63gvkhe8a1dZfc5DEb4Va'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/mzrt/users/addresses/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Addresses'
      subgroupDescription: 'Methods from users addresses'
      title: 'Get all addresses from a given user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=9SFWJK6nNCVzJQpeUyt7okjf6v2TW2R4iftvbheN; expires=Mon, 08 Jan 2024 21:58:56 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer abPD5ghZ68Eda14fekv6V3c'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/mzrt/users/addresses/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Addresses'
      subgroupDescription: 'Methods from users addresses'
      title: 'Store a new address for the specified user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      country_id:
        name: country_id
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      zip_code:
        name: zip_code
        description: ''
        required: true
        example: nihil
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: eum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      number:
        name: number
        description: ''
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      complement:
        name: complement
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: voluptas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      city:
        name: city
        description: ''
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: illo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      country_id: et
      zip_code: nihil
      address: eum
      number: voluptatem
      district: voluptas
      city: ut
      state: illo
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=zUqrPuL4DkB818MwiC68bM60kEizDaSTC8MvACxN; expires=Mon, 08 Jan 2024 21:58:57 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a45bVad8kcZ6e361PhDfgEv'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/mzrt/users/addresses/{user_id}/{address_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Addresses'
      subgroupDescription: 'Methods from users addresses'
      title: 'Updates an existing address'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_id:
        name: address_id
        description: 'The ID of the address.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
      address_id: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      country_id:
        name: country_id
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      zip_code:
        name: zip_code
        description: ''
        required: true
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      number:
        name: number
        description: ''
        required: true
        example: ex
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      complement:
        name: complement
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      city:
        name: city
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: placeat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      country_id: architecto
      zip_code: quia
      address: et
      number: ex
      district: quia
      city: consequatur
      state: placeat
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=WgYZogkkJcZTyO8xzkItGFiUSrajONfIbB90vWZ3; expires=Mon, 08 Jan 2024 21:58:57 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kVEbPgZ6e3vdaDc6ah185f4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/mzrt/users/instructor/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Instructors
      subgroupDescription: 'Methods for Instructors'
      title: 'Stores the instructors data from a user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: true
        example: quaerat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      commission:
        name: commission
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      bank_iban:
        name: bank_iban
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      bank_name:
        name: bank_name
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      identify_image:
        name: identify_image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      financial_approved:
        name: financial_approved
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      available_meetings:
        name: available_meetings
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      sex_meetings:
        name: sex_meetings
        description: ''
        required: false
        example: male
        type: string
        enumValues:
          - male
          - female
          - both
        exampleWasSpecified: false
        custom: []
      meeting_type:
        name: meeting_type
        description: ''
        required: false
        example: female
        type: string
        enumValues:
          - male
          - female
          - both
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      user_id: quaerat
      sex_meetings: male
      meeting_type: female
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=wj6Z93oZI8W9ixj5ck3KaAsoshUmULP72c595VZf; expires=Mon, 08 Jan 2024 21:58:57 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a4v5P1d3c6agZh8fekD6EVb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/mzrt/users/instructor/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Instructors
      subgroupDescription: 'Methods for Instructors'
      title: 'Updates the instructor information from a user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      commission:
        name: commission
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      bank_iban:
        name: bank_iban
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      bank_name:
        name: bank_name
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      identify_image:
        name: identify_image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      financial_approved:
        name: financial_approved
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      available_meetings:
        name: available_meetings
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      sex_meetings:
        name: sex_meetings
        description: ''
        required: false
        example: male
        type: string
        enumValues:
          - male
          - female
          - both
        exampleWasSpecified: false
        custom: []
      meeting_type:
        name: meeting_type
        description: ''
        required: false
        example: both
        type: string
        enumValues:
          - male
          - female
          - both
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      sex_meetings: male
      meeting_type: both
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=vrgmiXoJ4oJ65okt3gxjdKo0bbTqeAZJyCg7YtUA; expires=Mon, 08 Jan 2024 21:58:57 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bV65a3v6EahDeg84dc1fPkZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/mzrt/users/student/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'APIs for Students'
      title: 'Store a newly created student for an existent user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nickname:
        name: nickname
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      points:
        name: points
        description: ''
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      points: 10
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=MQiGbUh08FcPIUfhJqRG9O0jqGWUGJj5Fig9O7qI; expires=Mon, 08 Jan 2024 21:58:57 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6EhvV41Pac8aZg3dD5fekb6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/mzrt/users/student/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'APIs for Students'
      title: 'Update the specified student from an existent user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nickname:
        name: nickname
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      points:
        name: points
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      points: 17
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=60DosVZYSUYbsSWB6jcWKWOFNOQIyVX8VAlcr9YL; expires=Mon, 08 Jan 2024 21:58:57 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Dfab4ZV568avd3h6Pe1gckE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/mzrt/users/student/increase-points/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'APIs for Students'
      title: "Increase the student's point"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      points:
        name: points
        description: 'Must be at least 1.'
        required: true
        example: 15
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      points: 15
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=o2u360IJEQCW6P2MAg4dlby2UF5o1IyrTfsgP7CW; expires=Mon, 08 Jan 2024 21:58:57 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Z68ceE3g5kDPahV46f1vbda'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/mzrt/users/student/decrease-points/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'APIs for Students'
      title: "Decrease the student's point"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      points:
        name: points
        description: 'Must be at least 1.'
        required: true
        example: 13
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      points: 13
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=VQ6OtNgAcIa52b4yGoUnfxB8651eGpGh088sVqUX; expires=Mon, 08 Jan 2024 21:58:57 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fa66EDZe3Phg54bV1kv8acd'
    controller: null
    method: null
    route: null
    custom: []
