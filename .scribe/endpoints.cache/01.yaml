## Autogenerated by Scribe. DO NOT MODIFY.

name: Mozart
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/mzrt/users
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'List of generic users'
      title: 'List all users'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=DvAZ96ORJvxQE2ZfNNNlWXeaPRIT0AgTyf4tnBWh; expires=Tue, 26 Sep 2023 22:30:27 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6ah1gbacP683ZEkV5vd4feD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/mzrt/users
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'List of generic users'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: rem
        type: string
        enumValues: []
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: bjerde@example.com
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: asperiores
        type: string
        enumValues: []
        custom: []
      role:
        name: role
        description: ''
        required: true
        example: instructor
        type: string
        enumValues:
          - development
          - superuser
          - admin
          - student
          - instructor
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        custom: []
      timezone_id:
        name: timezone_id
        description: ''
        required: true
        example: corporis
        type: string
        enumValues: []
        custom: []
      group_id:
        name: group_id
        description: ''
        required: true
        example: quae
        type: string
        enumValues: []
        custom: []
      document:
        name: document
        description: ''
        required: true
        example: quis
        type: string
        enumValues: []
        custom: []
      identity_registry:
        name: identity_registry
        description: ''
        required: true
        example: nemo
        type: string
        enumValues: []
        custom: []
      avatar:
        name: avatar
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      birth_date:
        name: birth_date
        description: 'Must be a valid date in the format <code>d/m/Y</code>.'
        required: true
        example: 26/09/2023
        type: string
        enumValues: []
        custom: []
      gender:
        name: gender
        description: ''
        required: true
        example: male
        type: string
        enumValues:
          - male
          - female
          - both
        custom: []
      where_know_us:
        name: where_know_us
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      source:
        name: source
        description: ''
        required: true
        example: similique
        type: string
        enumValues: []
        custom: []
      nickname:
        name: nickname
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      active:
        name: active
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: rem
      email: bjerde@example.com
      password: asperiores
      role: instructor
      address: []
      timezone_id: corporis
      group_id: quae
      document: quis
      identity_registry: nemo
      birth_date: 26/09/2023
      gender: male
      source: similique
      active: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer d1bvZfVk5EDc4e8h3Pga6a6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/mzrt/users/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'List of generic users'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=zyFHpZlcMgElBLHWgdb9Xwz1myfc5FJFxl2TPDTO; expires=Tue, 26 Sep 2023 22:30:27 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Ef8g36hZPcek415abDVa6vd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/mzrt/users/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'List of generic users'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: praesentium
        type: string
        enumValues: []
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: wolff.alysha@example.org
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: 'Must contain at least one uppercase and one lowercase letter; must contain at least one symbol; must contain at least one number.'
        required: true
        example: 'H3u3h#H%#ywQEG.'
        type: string
        enumValues: []
        custom: []
      roles:
        name: roles
        description: ''
        required: true
        example: student
        type: string
        enumValues:
          - development
          - superuser
          - admin
          - student
          - instructor
        custom: []
      address_id:
        name: address_id
        description: ''
        required: true
        example: eum
        type: string
        enumValues: []
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        custom: []
      timezone_id:
        name: timezone_id
        description: ''
        required: true
        example: aperiam
        type: string
        enumValues: []
        custom: []
      group_id:
        name: group_id
        description: ''
        required: true
        example: esse
        type: string
        enumValues: []
        custom: []
      document:
        name: document
        description: ''
        required: true
        example: qui
        type: string
        enumValues: []
        custom: []
      identity_registry:
        name: identity_registry
        description: ''
        required: true
        example: nihil
        type: string
        enumValues: []
        custom: []
      avatar:
        name: avatar
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      birth_date:
        name: birth_date
        description: 'Must be a valid date in the format <code>d/m/Y</code>.'
        required: true
        example: 26/09/2023
        type: string
        enumValues: []
        custom: []
      gender:
        name: gender
        description: ''
        required: true
        example: female
        type: string
        enumValues:
          - male
          - female
          - both
        custom: []
      where_know_us:
        name: where_know_us
        description: ''
        required: false
        example: iusto
        type: string
        enumValues: []
        custom: []
      source:
        name: source
        description: ''
        required: true
        example: consequuntur
        type: string
        enumValues: []
        custom: []
      nickname:
        name: nickname
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      active:
        name: active
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: praesentium
      email: wolff.alysha@example.org
      password: 'H3u3h#H%#ywQEG.'
      roles: student
      address_id: eum
      address: []
      timezone_id: aperiam
      group_id: esse
      document: qui
      identity_registry: nihil
      birth_date: 26/09/2023
      gender: female
      where_know_us: iusto
      source: consequuntur
      active: et
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6daf8bkDeZ14Vc3gPav6h5E'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/mzrt/users/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'List of generic users'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6kf1EPaDabd3Ze4g65cV8vh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/mzrt/user-groups
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Groups'
      subgroupDescription: 'List of groups of users'
      title: |-
        Displays a list of all groups of users. It accepts one parameter "all". Case has this parameter,
        it returns all groups of users with no paginate.
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=VYuzHu3845C822OCNkKL5ZC7kNbxRwNMRIlxJGuC; expires=Tue, 26 Sep 2023 22:30:27 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bvEg5aV8PZ6f13ec6d4kDah'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/mzrt/user-groups
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Groups'
      subgroupDescription: 'List of groups of users'
      title: 'Store a new user group'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "Group's name."
        required: true
        example: Vip
        type: string
        enumValues: []
        custom: []
      discount:
        name: discount
        description: 'User groups can have discounts. Type: decimal.'
        required: false
        example: 8.62
        type: number
        enumValues: []
        custom: []
      commission:
        name: commission
        description: 'User groups can have commissions. Type: decimal.'
        required: false
        example: 2076.38
        type: number
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: Vip
      discount: 8.62
      commission: 2076.38
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ch6kE8g513D4vfZbae6daVP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/mzrt/user-groups/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Groups'
      subgroupDescription: 'List of groups of users'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user group.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=9kfyYzXKKAL0ShPTn4skQyG66cQGaFBiszfp9Qee; expires=Tue, 26 Sep 2023 22:30:27 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 15a4Pf6eZVbEv8D63hkgadc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/mzrt/user-groups/{id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Groups'
      subgroupDescription: 'List of groups of users'
      title: 'Update a specific user group'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user group.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "Group's name."
        required: true
        example: Vip
        type: string
        enumValues: []
        custom: []
      discount:
        name: discount
        description: 'User groups can have discounts. Type: decimal.'
        required: false
        example: 108533398.87
        type: number
        enumValues: []
        custom: []
      commission:
        name: commission
        description: 'User groups can have commissions. Type: decimal.'
        required: false
        example: 1752476.77
        type: number
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: Vip
      discount: 108533398.87
      commission: 1752476.77
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 665hgfcak81PV4D3aebvEdZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/mzrt/users/enable/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'List of generic users'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ach463dDEfPek6bZvg51aV8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/mzrt/users/disable/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'List of generic users'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer f4vV6cD8k6g5bh3a1EadePZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/mzrt/users/addresses/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Addresses'
      subgroupDescription: 'Methods from users addresses'
      title: 'Get all addresses from a given user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          set-cookie: 'ead_abtpe_session=dBFiMcd7IcQPyKaHDER0fWZ3xz3gE00MSRt2kUfu; expires=Tue, 26 Sep 2023 22:30:27 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer d5ZEha4D6bPvVaf3kecg861'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/mzrt/users/addresses/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Addresses'
      subgroupDescription: 'Methods from users addresses'
      title: 'Store a new address for the specified user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      country_id:
        name: country_id
        description: ''
        required: true
        example: omnis
        type: string
        enumValues: []
        custom: []
      name:
        name: name
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      zip_code:
        name: zip_code
        description: ''
        required: true
        example: nulla
        type: string
        enumValues: []
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: necessitatibus
        type: string
        enumValues: []
        custom: []
      number:
        name: number
        description: ''
        required: true
        example: reiciendis
        type: string
        enumValues: []
        custom: []
      complement:
        name: complement
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: dolores
        type: string
        enumValues: []
        custom: []
      city:
        name: city
        description: ''
        required: true
        example: fugit
        type: string
        enumValues: []
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: perspiciatis
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      country_id: omnis
      zip_code: nulla
      address: necessitatibus
      number: reiciendis
      district: dolores
      city: fugit
      state: perspiciatis
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hgba8dc6k3avE16PDfZ45eV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/mzrt/users/addresses/{user_id}/{address_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: 'User Addresses'
      subgroupDescription: 'Methods from users addresses'
      title: 'Updates an existing address'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
      address_id:
        name: address_id
        description: 'The ID of the address.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      user_id: 1
      address_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      country_id:
        name: country_id
        description: ''
        required: true
        example: quis
        type: string
        enumValues: []
        custom: []
      name:
        name: name
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      zip_code:
        name: zip_code
        description: ''
        required: true
        example: ratione
        type: string
        enumValues: []
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: cum
        type: string
        enumValues: []
        custom: []
      number:
        name: number
        description: ''
        required: true
        example: cumque
        type: string
        enumValues: []
        custom: []
      complement:
        name: complement
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: vero
        type: string
        enumValues: []
        custom: []
      city:
        name: city
        description: ''
        required: true
        example: eaque
        type: string
        enumValues: []
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: a
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      country_id: quis
      zip_code: ratione
      address: cum
      number: cumque
      district: vero
      city: eaque
      state: a
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Df64kcvPa1Va6bhEe8gd3Z5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/mzrt/users/instructor/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Instructors
      subgroupDescription: 'Methods for Instructors'
      title: 'Stores the instructors data from a user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: true
        example: nemo
        type: string
        enumValues: []
        custom: []
      commission:
        name: commission
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      bank_iban:
        name: bank_iban
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      bank_name:
        name: bank_name
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      identify_image:
        name: identify_image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      financial_approved:
        name: financial_approved
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      available_meetings:
        name: available_meetings
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      sex_meetings:
        name: sex_meetings
        description: ''
        required: false
        example: female
        type: string
        enumValues:
          - male
          - female
          - both
        custom: []
      meeting_type:
        name: meeting_type
        description: ''
        required: false
        example: female
        type: string
        enumValues:
          - male
          - female
          - both
        custom: []
    cleanBodyParameters:
      user_id: nemo
      sex_meetings: female
      meeting_type: female
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer f3kdEeZ6cV51ab8aDv6hgP4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/mzrt/users/instructor/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Instructors
      subgroupDescription: 'Methods for Instructors'
      title: 'Updates the instructor information from a user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      commission:
        name: commission
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      bank_iban:
        name: bank_iban
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      bank_name:
        name: bank_name
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      identify_image:
        name: identify_image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      financial_approved:
        name: financial_approved
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      available_meetings:
        name: available_meetings
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      sex_meetings:
        name: sex_meetings
        description: ''
        required: false
        example: both
        type: string
        enumValues:
          - male
          - female
          - both
        custom: []
      meeting_type:
        name: meeting_type
        description: ''
        required: false
        example: female
        type: string
        enumValues:
          - male
          - female
          - both
        custom: []
    cleanBodyParameters:
      sex_meetings: both
      meeting_type: female
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6EafvD5gPbck48aV6e31Zhd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/mzrt/users/student/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'APIs for Students'
      title: 'Store a newly created student for an existent user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nickname:
        name: nickname
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      points:
        name: points
        description: ''
        required: true
        example: 16
        type: integer
        enumValues: []
        custom: []
    cleanBodyParameters:
      points: 16
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer c3b1a6kDEV8hPgfe5v6aZ4d'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/mzrt/users/student/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'APIs for Students'
      title: 'Update the specified student from an existent user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nickname:
        name: nickname
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      points:
        name: points
        description: ''
        required: true
        example: 9
        type: integer
        enumValues: []
        custom: []
    cleanBodyParameters:
      points: 9
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vDPhg18kEeV3Z66fbcd54aa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/mzrt/users/student/increase-points/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'APIs for Students'
      title: "Increase the student's point"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      points:
        name: points
        description: 'Must be at least 1.'
        required: true
        example: 81
        type: number
        enumValues: []
        custom: []
    cleanBodyParameters:
      points: 81
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dEZ6PvbcgV6D481ha5faek3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/mzrt/users/student/decrease-points/{user_id}'
    metadata:
      groupName: Mozart
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'APIs for Students'
      title: "Decrease the student's point"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      points:
        name: points
        description: 'Must be at least 1.'
        required: true
        example: 43
        type: number
        enumValues: []
        custom: []
    cleanBodyParameters:
      points: 43
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Eek48Dd3Vbha1caf6Pg65Zv'
    controller: null
    method: null
    route: null
    custom: []
